{"version":3,"sources":["constants/productConstants.js","constants/cartConstants.js","constants/userConstants.js","constants/orderConstants.js","store.js","reducers/productReducers.js","reducers/cartReducers.js","reducers/userReduces.js","reducers/orderReduces.js","components/SearchBox.js","actions/userActions.js","components/Header.js","components/Footer.js","components/Rating.js","components/Product.js","components/Loader.js","components/Message.js","components/Paginate.js","actions/productActions.js","components/ProductCarousel.js","screens/HomeScreen.js","screens/ProductScreen.js","actions/cartActions.js","screens/CartScreen.js","components/FormContainer.js","screens/LoginScreen.js","screens/RegisterScreen.js","screens/ProfileScreen.js","actions/orderActions.js","components/CheckoutSteps.js","screens/ShippingScreen.js","screens/PaymentScreen.js","screens/PlaceOrderScreen.js","screens/OrderScreen.js","screens/OrderListScreen.js","screens/UserListScreen.js","screens/UserEditScreen.js","screens/ProductListScreen.js","screens/ProductEditScreen.js","App.js","reportWebVitals.js","index.js"],"names":["PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","PRODUCT_LIST_FAIL","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_DETAILS_FAIL","PRODUCT_DELETE_REQUEST","PRODUCT_DELETE_SUCCESS","PRODUCT_DELETE_FAIL","PRODUCT_CREATE_REQUEST","PRODUCT_CREATE_SUCCESS","PRODUCT_CREATE_FAIL","PRODUCT_CREATE_RESET","PRODUCT_UPDATE_REQUEST","PRODUCT_UPDATE_SUCCESS","PRODUCT_UPDATE_FAIL","PRODUCT_UPDATE_RESET","PRODUCT_CREATE_REVIEW_REQUEST","PRODUCT_CREATE_REVIEW_SUCCESS","PRODUCT_CREATE_REVIEW_FAIL","PRODUCT_CREATE_REVIEW_RESET","PRODUCT_TOP_REQUEST","PRODUCT_TOP_SUCCESS","PRODUCT_TOP_FAIL","CART_ADD_ITEM","CART_REMOVE_ITEM","CART_SAVE_SHIPPING_ADDRESS","CART_SAVE_PAYMENT_METHOD","CART_CLEAR_ITEMS","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_DETAILS_FAIL","USER_DETAILS_RESET","USER_UPDATE_PROFILE_REQUEST","USER_UPDATE_PROFILE_SUCCESS","USER_UPDATE_PROFILE_FAIL","USER_UPDATE_PROFILE_RESET","USER_LIST_REQUEST","USER_LIST_SUCCESS","USER_LIST_FAIL","USER_LIST_RESET","USER_DELETE_REQUEST","USER_DELETE_SUCCESS","USER_DELETE_FAIL","USER_UPDATE_REQUEST","USER_UPDATE_SUCCESS","USER_UPDATE_FAIL","USER_UPDATE_RESET","ORDER_CREATE_REQUEST","ORDER_CREATE_SUCCESS","ORDER_CREATE_FAIL","ORDER_CREATE_RESET","ORDER_DETAILS_REQUEST","ORDER_DETAILS_SUCCESS","ORDER_DETAILS_FAIL","ORDER_PAY_REQUEST","ORDER_PAY_SUCCESS","ORDER_PAY_FAIL","ORDER_PAY_RESET","ORDER_LIST_MY_REQUEST","ORDER_LIST_MY_SUCCESS","ORDER_LIST_MY_FAIL","ORDER_LIST_MY_RESET","ORDER_LIST_REQUEST","ORDER_LIST_SUCCESS","ORDER_LIST_FAIL","ORDER_DELIVER_REQUEST","ORDER_DELIVER_SUCCESS","ORDER_DELIVER_FAIL","ORDER_DELIVER_RESET","reducer","combineReducers","productList","state","products","action","type","loading","payload","page","pages","error","productDetails","product","reviews","productDelete","success","productCreate","productUpdate","productCreateReview","productTopRated","cart","cartItems","shipingAddress","item","existItem","find","x","map","filter","paymentMethod","userLogin","userInfo","userRegister","userDetails","user","userUpdateProfile","userList","users","userDelete","userUpdate","orderCreate","order","orderDetails","orderItems","shippingAddress","orderPay","orderDeliver","orderListMy","orders","orderList","cartItemsFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","initialState","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","SearchBox","useState","keyword","setKeyword","history","useHistory","Form","onSubmit","e","preventDefault","push","location","pathname","inline","className","Control","name","placeholder","onChange","target","value","Button","variant","getUserDetails","id","dispatch","getState","a","config","headers","Authorization","token","axios","get","data","response","detail","message","Header","useSelector","useDispatch","Navbar","bg","expand","collapseOnSelect","Container","to","Brand","Toggle","aria-controls","Collapse","Nav","Link","NavDropdown","title","Item","onClick","removeItem","isAdmin","Footer","Row","Col","Rating","text","color","style","Product","Card","_id","Img","src","image","Body","Title","as","Text","rating","numReviews","price","Loader","Spinner","animation","role","height","width","margin","display","Message","children","Alert","Paginate","split","console","log","Pagination","Array","keys","p","active","listProducts","listProductDetails","ProductCarousel","useEffect","Carousel","pause","Image","alt","fluid","Caption","HomeScreen","search","sm","md","lg","xl","ProductScreen","match","quantity","setQuantity","setRating","comment","setComment","errorProductReview","loadingProductReview","successProductReview","params","ListGroup","description","countInStock","xs","disabled","productId","review","post","Group","controlId","Label","row","class","length","createdAt","substring","addToCart","setItem","stringify","CartScreen","Number","removeFromCartHandler","removeFromCart","rounded","reduce","acc","toFixed","FormContainer","LoginScreen","email","setEmail","password","setPassword","redirect","login","required","RegisterScreen","setName","confirmPassword","setConfirmPassword","setMessage","register","ProfileScreen","loadingOrders","errorOrders","put","updateUserProfile","Table","striped","responsive","totalPrice","isPaid","paidAt","isDelivered","deliveredAt","CheckoutSteps","step1","step2","step3","step4","ShippingScreen","address","setAddress","city","setCity","postalCode","setPostalCode","country","setCountry","ProgressBar","now","PaymentScreen","setPaymentMethod","Check","label","checked","PlaceOrderScreen","itemsPrice","shippingPrice","taxPrice","index","createOrder","OrderScreen","orderId","sdkReady","setSdkReady","loadingPay","successPay","loadingDeliver","successDeliver","window","paypal","script","document","createElement","async","onload","body","appendChild","addPayPalScript","href","amount","onSuccess","paymentResult","payOrder","deliverOrder","OrderListScreen","bordered","hover","UserListScreen","successDelete","deleteHandler","confirm","delete","deleteUser","UserEditScreen","userId","setIsAdmin","errorUpdate","loadingUpdate","successUpdate","updateUser","ProductListScreen","loadingDelete","errorDelete","loadingCreate","errorCreate","successCreate","createdProduct","shortName","deleteProduct","textAlign","category","brand","ProductEditScreen","setPrice","setImage","setBrand","setCategory","setCountInStock","setDescription","uploading","setUploading","uploadFileHandler","file","files","formData","FormData","append","updateProduct","File","lable","custom","App","path","component","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.58f3924b.chunk.js","sourcesContent":["export const PRODUCT_LIST_REQUEST = 'PRODUCT_LIST_REQUEST'\r\nexport const PRODUCT_LIST_SUCCESS = 'PRODUCT_LIST_SUCCESS'\r\nexport const PRODUCT_LIST_FAIL = 'PRODUCT_LIST_FAIL'\r\n\r\nexport const PRODUCT_DETAILS_REQUEST = 'PRODUCT_DETAILS_REQUEST'\r\nexport const PRODUCT_DETAILS_SUCCESS = 'PRODUCT_DETAILS_SUCCESS'\r\nexport const PRODUCT_DETAILS_FAIL = 'PRODUCT_DETAILS_FAIL'\r\n\r\nexport const PRODUCT_DELETE_REQUEST = 'PRODUCT_DELETE_REQUEST'\r\nexport const PRODUCT_DELETE_SUCCESS = 'PRODUCT_DELETE_SUCCESS'\r\nexport const PRODUCT_DELETE_FAIL = 'PRODUCT_DELETE_FAIL'\r\n\r\nexport const PRODUCT_CREATE_REQUEST = 'PRODUCT_CREATE_REQUEST'\r\nexport const PRODUCT_CREATE_SUCCESS = 'PRODUCT_CREATE_SUCCESS'\r\nexport const PRODUCT_CREATE_FAIL = 'PRODUCT_CREATE_FAIL'\r\nexport const PRODUCT_CREATE_RESET = 'PRODUCT_CREATE_RESET'\r\n\r\nexport const PRODUCT_UPDATE_REQUEST = 'PRODUCT_UPDATE_REQUEST'\r\nexport const PRODUCT_UPDATE_SUCCESS = 'PRODUCT_UPDATE_SUCCESS'\r\nexport const PRODUCT_UPDATE_FAIL = 'PRODUCT_UPDATE_FAIL'\r\nexport const PRODUCT_UPDATE_RESET = 'PRODUCT_UPDATE_RESET'\r\n\r\nexport const PRODUCT_CREATE_REVIEW_REQUEST = 'PRODUCT_CREATE_REVIEW_REQUEST'\r\nexport const PRODUCT_CREATE_REVIEW_SUCCESS = 'PRODUCT_CREATE_REVIEW_SUCCESS'\r\nexport const PRODUCT_CREATE_REVIEW_FAIL = 'PRODUCT_CREATE_REVIEW_FAIL'\r\nexport const PRODUCT_CREATE_REVIEW_RESET = 'PRODUCT_CREATE_REVIEW_RESET'\r\n\r\nexport const PRODUCT_TOP_REQUEST = 'PRODUCT_TOP_REQUEST'\r\nexport const PRODUCT_TOP_SUCCESS = 'PRODUCT_TOP_SUCCESS'\r\nexport const PRODUCT_TOP_FAIL = 'PRODUCT_TOP_FAIL'","export const CART_ADD_ITEM = 'CART_ADD_ITEM'\r\nexport const CART_REMOVE_ITEM = 'CART_REMOVE_ITEM'\r\n\r\nexport const CART_SAVE_SHIPPING_ADDRESS = 'CART_SAVE_SHIPPING_ADDRESS'\r\n\r\nexport const CART_SAVE_PAYMENT_METHOD = 'CART_SAVE_PAYMENT_METHOD'\r\n\r\nexport const CART_CLEAR_ITEMS = 'CART_CLEAR_ITEMS'","export const USER_LOGIN_REQUEST = 'USER_LOGIN_REQUEST'\r\nexport const USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS'\r\nexport const USER_LOGIN_FAIL = 'USER_LOGIN_FAIL'\r\n\r\nexport const USER_LOGOUT = 'USER_LOGOUT'\r\n\r\nexport const USER_REGISTER_REQUEST = 'USER_REGISTER_REQUEST'\r\nexport const USER_REGISTER_SUCCESS = 'USER_REGISTER_SUCCESS'\r\nexport const USER_REGISTER_FAIL = 'USER_REGISTER_FAIL'\r\n\r\nexport const USER_DETAILS_REQUEST = 'USER_DETAILS_REQUEST'\r\nexport const USER_DETAILS_SUCCESS = 'USER_DETAILS_SUCCESS'\r\nexport const USER_DETAILS_FAIL = 'USER_DETAILS_FAIL'\r\nexport const USER_DETAILS_RESET = 'USER_DETAILS_RESET'\r\n\r\nexport const USER_UPDATE_PROFILE_REQUEST = 'USER_UPDATE_PROFILE_REQUEST'\r\nexport const USER_UPDATE_PROFILE_SUCCESS = 'USER_UPDATE_PROFILE_SUCCESS'\r\nexport const USER_UPDATE_PROFILE_FAIL = 'USER_UPDATE_PROFILE_FAIL'\r\nexport const USER_UPDATE_PROFILE_RESET = 'USER_UPDATE_PROFILE_RESET'\r\n\r\nexport const USER_LIST_REQUEST = 'USER_LIST_REQUEST'\r\nexport const USER_LIST_SUCCESS = 'USER_LIST_SUCCESS'\r\nexport const USER_LIST_FAIL = 'USER_LIST_FAIL'\r\nexport const USER_LIST_RESET = 'USER_LIST_RESET'\r\n\r\nexport const USER_DELETE_REQUEST = 'USER_DELETE_REQUEST'\r\nexport const USER_DELETE_SUCCESS = 'USER_DELETE_SUCCESS'\r\nexport const USER_DELETE_FAIL = 'USER_DELETE_FAIL'\r\n\r\nexport const USER_UPDATE_REQUEST = 'USER_UPDATE_REQUEST'\r\nexport const USER_UPDATE_SUCCESS = 'USER_UPDATE_SUCCESS'\r\nexport const USER_UPDATE_FAIL = 'USER_UPDATE_FAIL'\r\nexport const USER_UPDATE_RESET = 'USER_UPDATE_RESET'","export const ORDER_CREATE_REQUEST = 'ORDER_CREATE_REQUEST'\r\nexport const ORDER_CREATE_SUCCESS = 'ORDER_CREATE_SUCCESS'\r\nexport const ORDER_CREATE_FAIL = 'ORDER_CREATE_FAIL'\r\nexport const ORDER_CREATE_RESET = 'ORDER_CREATE_RESET'\r\n\r\nexport const ORDER_DETAILS_REQUEST = 'ORDER_DETAILS_REQUEST'\r\nexport const ORDER_DETAILS_SUCCESS = 'ORDER_DETAILS_SUCCESS'\r\nexport const ORDER_DETAILS_FAIL = 'ORDER_DETAILS_FAIL'\r\n\r\nexport const ORDER_PAY_REQUEST = 'ORDER_PAY_REQUEST'\r\nexport const ORDER_PAY_SUCCESS = 'ORDER_PAY_SUCCESS'\r\nexport const ORDER_PAY_FAIL = 'ORDER_PAY_FAIL'\r\nexport const ORDER_PAY_RESET = 'ORDER_PAY_RESET'\r\n\r\nexport const ORDER_LIST_MY_REQUEST = 'ORDER_LIST_MY_REQUEST'\r\nexport const ORDER_LIST_MY_SUCCESS = 'ORDER_LIST_MY_SUCCESS'\r\nexport const ORDER_LIST_MY_FAIL = 'ORDER_LIST_MY_FAIL'\r\nexport const ORDER_LIST_MY_RESET = 'ORDER_LIST_MY_RESET'\r\n\r\nexport const ORDER_LIST_REQUEST = 'ORDER_LIST_REQUEST'\r\nexport const ORDER_LIST_SUCCESS = 'ORDER_LIST_SUCCESS'\r\nexport const ORDER_LIST_FAIL = 'ORDER_LIST_FAIL'\r\n\r\nexport const ORDER_DELIVER_REQUEST = 'ORDER_DELIVER_REQUEST'\r\nexport const ORDER_DELIVER_SUCCESS = 'ORDER_DELIVER_SUCCESS'\r\nexport const ORDER_DELIVER_FAIL = 'ORDER_DELIVER_FAIL'\r\nexport const ORDER_DELIVER_RESET = 'ORDER_DELIVER_RESET'","import { createStore, combineReducers, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport { \r\n    productListReducer,\r\n    productDetailsReducer,\r\n    productDeleteReducer,\r\n    productCreateReducer,\r\n    productUpdateReducer,\r\n    productCreateReviewReducer,\r\n    productTopRatedReducer,\r\n} from './reducers/productReducers'\r\nimport { cartReducer } from './reducers/cartReducers'\r\nimport { \r\n    userLoginReducer,\r\n    userRegisterReducer,\r\n    userDetailsReducer,\r\n    userUpdateProfileReducer,\r\n    userListReducer,\r\n    userDeleteReducer,\r\n    userUpdateReducer,\r\n} from './reducers/userReduces'\r\nimport {\r\n    orderCreateReducer,\r\n    orderDetailsReducer,\r\n    orderPayReducer,\r\n    orderDeliverReducer,\r\n    orderListMyReducer,\r\n    orderListReducer,\r\n} from './reducers/orderReduces'\r\n\r\n\r\nconst reducer = combineReducers({\r\n    productList: productListReducer,\r\n    productDetails: productDetailsReducer,\r\n    productDelete: productDeleteReducer,\r\n    productCreate: productCreateReducer,\r\n    productUpdate: productUpdateReducer,\r\n    productCreateReview: productCreateReviewReducer,\r\n    productTopRated: productTopRatedReducer,\r\n\r\n    cart: cartReducer,\r\n    \r\n    userLogin: userLoginReducer,\r\n    userRegister: userRegisterReducer,\r\n    userDetails: userDetailsReducer,\r\n    userUpdateProfile: userUpdateProfileReducer,\r\n    userList: userListReducer,\r\n    userDelete: userDeleteReducer,\r\n    userUpdate: userUpdateReducer,\r\n\r\n    orderCreate: orderCreateReducer,\r\n    orderDetails: orderDetailsReducer,\r\n    orderPay: orderPayReducer,\r\n    orderDeliver: orderDeliverReducer,\r\n    orderListMy: orderListMyReducer,\r\n    orderList: orderListReducer,\r\n})\r\n\r\nconst cartItemsFromStorage = localStorage.getItem('cartItems') ?\r\n    JSON.parse(localStorage.getItem('cartItems')) : [] \r\n\r\nconst userInfoFromStorage = localStorage.getItem('userInfo') ?\r\n    JSON.parse(localStorage.getItem('userInfo')) : null \r\n\r\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress') ?\r\n    JSON.parse(localStorage.getItem('shippingAddress')) : {} \r\n\r\nconst initialState = {\r\n    cart: {cartItems: cartItemsFromStorage, shippingAddress: shippingAddressFromStorage},\r\n    userLogin: {userInfo: userInfoFromStorage},\r\n}\r\n\r\nconst middleware = [thunk]\r\n\r\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)))\r\n\r\nexport default store","import {\r\n    PRODUCT_LIST_REQUEST, PRODUCT_LIST_SUCCESS, PRODUCT_LIST_FAIL,\r\n    PRODUCT_DETAILS_REQUEST, PRODUCT_DETAILS_SUCCESS, PRODUCT_DETAILS_FAIL,\r\n    PRODUCT_DELETE_REQUEST, PRODUCT_DELETE_SUCCESS, PRODUCT_DELETE_FAIL,\r\n    PRODUCT_CREATE_REQUEST, PRODUCT_CREATE_SUCCESS, PRODUCT_CREATE_FAIL, PRODUCT_CREATE_RESET,\r\n    PRODUCT_UPDATE_REQUEST, PRODUCT_UPDATE_SUCCESS, PRODUCT_UPDATE_FAIL, PRODUCT_UPDATE_RESET,\r\n    PRODUCT_CREATE_REVIEW_REQUEST, PRODUCT_CREATE_REVIEW_SUCCESS, PRODUCT_CREATE_REVIEW_FAIL, PRODUCT_CREATE_REVIEW_RESET,\r\n    PRODUCT_TOP_REQUEST, PRODUCT_TOP_SUCCESS, PRODUCT_TOP_FAIL,\r\n} from '../constants/productConstants'\r\n\r\n\r\nexport const productListReducer = (state={products:[]}, action) => {\r\n    switch(action.type){\r\n        case PRODUCT_LIST_REQUEST:\r\n            return { loading:true, products:[] }\r\n\r\n        case PRODUCT_LIST_SUCCESS:\r\n            return {\r\n                loading:false,\r\n                products: action.payload.products,\r\n                page: action.payload.page,\r\n                pages: action.payload.pages\r\n            }\r\n        \r\n        case PRODUCT_LIST_FAIL:\r\n            return { loading:false, error: action.payload }\r\n        \r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const productDetailsReducer = (state={product:{reviews:[]}}, action) => {\r\n    switch(action.type){\r\n        case PRODUCT_DETAILS_REQUEST:\r\n            return { loading:true, ...state }\r\n\r\n        case PRODUCT_DETAILS_SUCCESS:\r\n            return { loading:false, product: action.payload }\r\n        \r\n        case PRODUCT_DETAILS_FAIL:\r\n            return { loading:false, error: action.payload }\r\n        \r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const productDeleteReducer = (state={}, action) => {\r\n    switch(action.type){\r\n        case PRODUCT_DELETE_REQUEST:\r\n            return { loading:true }\r\n\r\n        case PRODUCT_DELETE_SUCCESS:\r\n            return { loading:false, success: true }\r\n        \r\n        case PRODUCT_DELETE_FAIL:\r\n            return { loading:false, error: action.payload }\r\n        \r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const productCreateReducer = (state={}, action) => {\r\n    switch(action.type){\r\n        case PRODUCT_CREATE_REQUEST:\r\n            return { loading:true }\r\n\r\n        case PRODUCT_CREATE_SUCCESS:\r\n            return { loading:false, success: true, product: action.payload }\r\n        \r\n        case PRODUCT_CREATE_FAIL:\r\n            return { loading:false, error: action.payload }\r\n        \r\n        case PRODUCT_CREATE_RESET:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const productUpdateReducer = (state={product: {}}, action) => {\r\n    switch(action.type){\r\n        case PRODUCT_UPDATE_REQUEST:\r\n            return { loading:true }\r\n\r\n        case PRODUCT_UPDATE_SUCCESS:\r\n            return { loading:false, success: true, product: action.payload }\r\n        \r\n        case PRODUCT_UPDATE_FAIL:\r\n            return { loading:false, error: action.payload }\r\n        \r\n        case PRODUCT_UPDATE_RESET:\r\n            return { product: {} }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const productCreateReviewReducer = (state={}, action) => {\r\n    switch(action.type){\r\n        case PRODUCT_CREATE_REVIEW_REQUEST:\r\n            return { loading:true }\r\n\r\n        case PRODUCT_CREATE_REVIEW_SUCCESS:\r\n            return { loading:false, success: true }\r\n        \r\n        case PRODUCT_CREATE_REVIEW_FAIL:\r\n            return { loading:false, error: action.payload }\r\n        \r\n        case PRODUCT_CREATE_REVIEW_RESET:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const productTopRatedReducer = (state={products: []}, action) => {\r\n    switch(action.type){\r\n        case PRODUCT_TOP_REQUEST:\r\n            return { loading:true, products: [] }\r\n\r\n        case PRODUCT_TOP_SUCCESS:\r\n            return { loading:false, products: action.payload }\r\n        \r\n        case PRODUCT_TOP_FAIL:\r\n            return { loading:false, error: action.payload }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}","import { \r\n    CART_ADD_ITEM,\r\n    CART_REMOVE_ITEM,\r\n\r\n    CART_SAVE_SHIPPING_ADDRESS,\r\n\r\n    CART_SAVE_PAYMENT_METHOD,\r\n\r\n    CART_CLEAR_ITEMS\r\n} from '../constants/cartConstants'\r\n\r\n\r\nexport const cartReducer = (state={cartItems:[], shipingAddress: {}}, action) => {\r\n    switch(action.type){\r\n        case CART_ADD_ITEM:\r\n            const item = action.payload\r\n            const existItem = state.cartItems.find(x => x.product === item.product)\r\n            if(existItem){\r\n                return {\r\n                    ...state,\r\n                    cartItems: state.cartItems.map(x => x.product === existItem.product ? item : x)\r\n                }\r\n            }else{\r\n                return {\r\n                    ...state,\r\n                    cartItems:[...state.cartItems, item]\r\n                }\r\n            }\r\n        \r\n        case CART_REMOVE_ITEM:\r\n            return {\r\n                ...state,\r\n                cartItems: state.cartItems.filter(x => x.product !== action.payload) // action.payload - id of product we wanna remove\r\n            }\r\n\r\n        case CART_SAVE_SHIPPING_ADDRESS:\r\n            return {\r\n                ...state,\r\n                shipingAddress: action.payload\r\n            }\r\n\r\n        case CART_SAVE_PAYMENT_METHOD:\r\n            return {\r\n                ...state,\r\n                paymentMethod: action.payload\r\n            }\r\n\r\n        case CART_CLEAR_ITEMS:\r\n            return {\r\n                ...state,\r\n                cartItems: []\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}","import {\r\n    USER_LOGIN_REQUEST,\r\n    USER_LOGIN_SUCCESS,\r\n    USER_LOGIN_FAIL,\r\n\r\n    USER_LOGOUT,\r\n\r\n    USER_REGISTER_REQUEST,\r\n    USER_REGISTER_SUCCESS,\r\n    USER_REGISTER_FAIL,\r\n\r\n    USER_DETAILS_REQUEST,\r\n    USER_DETAILS_SUCCESS,\r\n    USER_DETAILS_FAIL,\r\n    USER_DETAILS_RESET,\r\n\r\n    USER_UPDATE_PROFILE_REQUEST,\r\n    USER_UPDATE_PROFILE_SUCCESS,\r\n    USER_UPDATE_PROFILE_FAIL,\r\n    USER_UPDATE_PROFILE_RESET,\r\n\r\n    USER_LIST_REQUEST,\r\n    USER_LIST_SUCCESS,\r\n    USER_LIST_FAIL,\r\n    USER_LIST_RESET,\r\n\r\n    USER_DELETE_REQUEST,\r\n    USER_DELETE_SUCCESS,\r\n    USER_DELETE_FAIL,\r\n\r\n    USER_UPDATE_REQUEST,\r\n    USER_UPDATE_SUCCESS,\r\n    USER_UPDATE_FAIL,\r\n    USER_UPDATE_RESET,\r\n } from '../constants/userConstants'\r\n\r\n // action.payload - data from api call\r\n\r\nexport const userLoginReducer = (state={}, action) => {\r\n    switch(action.type){\r\n        case USER_LOGIN_REQUEST:\r\n            return { loading:true }\r\n\r\n        case USER_LOGIN_SUCCESS:\r\n            return { loading:false, userInfo: action.payload }\r\n        \r\n        case USER_LOGIN_FAIL:\r\n            return { loading:false, error: action.payload }\r\n\r\n        case USER_LOGOUT:\r\n            return {}\r\n        \r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const userRegisterReducer = (state={}, action) => {\r\n    switch(action.type){\r\n        case USER_REGISTER_REQUEST:\r\n            return { loading:true }\r\n\r\n        case USER_REGISTER_SUCCESS:\r\n            return { loading:false, userInfo: action.payload }\r\n        \r\n        case USER_REGISTER_FAIL:\r\n            return { loading:false, error: action.payload }\r\n\r\n        case USER_LOGOUT:\r\n            return {}\r\n        \r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const userDetailsReducer = (state={ user: {} }, action) => {\r\n    switch(action.type){\r\n        case USER_DETAILS_REQUEST:\r\n            return { ...state, loading:true }\r\n\r\n        case USER_DETAILS_SUCCESS:\r\n            return { loading:false, user: action.payload }\r\n        \r\n        case USER_DETAILS_FAIL:\r\n            return { loading:false, error: action.payload }\r\n\r\n        case USER_DETAILS_RESET:\r\n            return { user: {} }\r\n        \r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const userUpdateProfileReducer = (state={}, action) => {\r\n    switch(action.type){\r\n        case USER_UPDATE_PROFILE_REQUEST:\r\n            return { loading:true }\r\n\r\n        case USER_UPDATE_PROFILE_SUCCESS:\r\n            return { loading:false, success: true, userInfo: action.payload }\r\n        \r\n        case USER_UPDATE_PROFILE_FAIL:\r\n            return { loading:false, error: action.payload }\r\n\r\n        case USER_UPDATE_PROFILE_RESET:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const userListReducer = (state={ users: []}, action) => {\r\n    switch(action.type){\r\n        case USER_LIST_REQUEST:\r\n            return { loading:true }\r\n\r\n        case USER_LIST_SUCCESS:\r\n            return { loading:false, users: action.payload }\r\n        \r\n        case USER_LIST_FAIL:\r\n            return { loading:false, error: action.payload }\r\n\r\n        case USER_LIST_RESET:\r\n            return { users: []}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const userDeleteReducer = (state={}, action) => {\r\n    switch(action.type){\r\n        case USER_DELETE_REQUEST:\r\n            return { loading:true }\r\n\r\n        case USER_DELETE_SUCCESS:\r\n            return { loading:false, success: true }\r\n        \r\n        case USER_DELETE_FAIL:\r\n            return { loading:false, error: action.payload }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const userUpdateReducer = (state={user: {}}, action) => {\r\n    switch(action.type){\r\n        case USER_UPDATE_REQUEST:\r\n            return { loading:true }\r\n\r\n        case USER_UPDATE_SUCCESS:\r\n            return { loading:false, success: true }\r\n        \r\n        case USER_UPDATE_FAIL:\r\n            return { loading:false, error: action.payload }\r\n\r\n        case USER_UPDATE_RESET:\r\n            return { user: {} }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","import { \r\n    ORDER_CREATE_REQUEST,\r\n    ORDER_CREATE_SUCCESS,\r\n    ORDER_CREATE_FAIL,\r\n    ORDER_CREATE_RESET,\r\n\r\n    ORDER_DETAILS_REQUEST,\r\n    ORDER_DETAILS_SUCCESS,\r\n    ORDER_DETAILS_FAIL,\r\n\r\n    ORDER_PAY_REQUEST,\r\n    ORDER_PAY_SUCCESS,\r\n    ORDER_PAY_FAIL,\r\n    ORDER_PAY_RESET,\r\n\r\n    ORDER_LIST_MY_REQUEST,\r\n    ORDER_LIST_MY_SUCCESS,\r\n    ORDER_LIST_MY_FAIL,\r\n    ORDER_LIST_MY_RESET,\r\n\r\n    ORDER_LIST_REQUEST,\r\n    ORDER_LIST_SUCCESS,\r\n    ORDER_LIST_FAIL,\r\n\r\n    ORDER_DELIVER_REQUEST,\r\n    ORDER_DELIVER_SUCCESS,\r\n    ORDER_DELIVER_FAIL,\r\n    ORDER_DELIVER_RESET,\r\n} from '../constants/orderConstants'\r\n\r\n\r\nexport const orderCreateReducer = (state={}, action) => {\r\n    switch(action.type){\r\n        case ORDER_CREATE_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n\r\n        case ORDER_CREATE_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                success: true,\r\n                order: action.payload\r\n            }\r\n\r\n        case ORDER_CREATE_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n\r\n        case ORDER_CREATE_RESET:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const orderDetailsReducer = (state={loading: true, orderItems: [], shippingAddress: {}}, action) => {\r\n    switch(action.type){\r\n        case ORDER_DETAILS_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n\r\n        case ORDER_DETAILS_SUCCESS:\r\n            return {\r\n                loading: false, \r\n                order: action.payload\r\n            }\r\n\r\n        case ORDER_DETAILS_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const orderPayReducer = (state={}, action) => {\r\n    switch(action.type){\r\n        case ORDER_PAY_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n\r\n        case ORDER_PAY_SUCCESS:\r\n            return {\r\n                loading: false, \r\n                success: true,\r\n            }\r\n\r\n        case ORDER_PAY_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n\r\n        case ORDER_PAY_RESET:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const orderDeliverReducer = (state={}, action) => {\r\n    switch(action.type){\r\n        case ORDER_DELIVER_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n\r\n        case ORDER_DELIVER_SUCCESS:\r\n            return {\r\n                loading: false, \r\n                success: true,\r\n            }\r\n\r\n        case ORDER_DELIVER_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n\r\n        case ORDER_DELIVER_RESET:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const orderListMyReducer = (state={orders: []}, action) => {\r\n    switch(action.type){\r\n        case ORDER_LIST_MY_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n\r\n        case ORDER_LIST_MY_SUCCESS:\r\n            return {\r\n                loading: false, \r\n                orders: action.payload,\r\n            }\r\n\r\n        case ORDER_LIST_MY_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n\r\n        case ORDER_LIST_MY_RESET:\r\n            return {\r\n                orders: []\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const orderListReducer = (state={orders: []}, action) => {\r\n    switch(action.type){\r\n        case ORDER_LIST_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n\r\n        case ORDER_LIST_SUCCESS:\r\n            return {\r\n                loading: false, \r\n                orders: action.payload,\r\n            }\r\n\r\n        case ORDER_LIST_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","import React, { useState } from 'react'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\n\r\nfunction SearchBox() {\r\n    const [keyword, setKeyword] = useState('')\r\n\r\n    let history = useHistory()\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n\r\n        if(keyword){\r\n            history.push(`/?keyword=${keyword}&?page=1`)\r\n        }else{\r\n            history.push(history.push(history.location.pathname))\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Form onSubmit={submitHandler} inline className=\"d-flex\">\r\n            <Form.Control\r\n                type=\"text\"\r\n                name=\"q\"\r\n                placeholder=\"Search\"\r\n                onChange={ (e) => setKeyword(e.target.value)}\r\n                className=\"mr-sm-2 ml-sm-5\"\r\n            />\r\n\r\n            <Button\r\n                type=\"submit\"\r\n                className=\"p-2\"\r\n                variant=\"outline-light\"\r\n            >\r\n                <i className=\"fas fa-search\"></i>\r\n            </Button>\r\n        </Form>\r\n    )\r\n}\r\n\r\nexport default SearchBox\r\n","import axios from 'axios'\r\n\r\nimport {\r\n    USER_LOGIN_REQUEST,\r\n    USER_LOGIN_SUCCESS,\r\n    USER_LOGIN_FAIL,\r\n\r\n    USER_LOGOUT,\r\n\r\n    USER_REGISTER_REQUEST, \r\n    USER_REGISTER_SUCCESS,\r\n    USER_REGISTER_FAIL,\r\n\r\n    USER_DETAILS_REQUEST, \r\n    USER_DETAILS_SUCCESS,\r\n    USER_DETAILS_FAIL,\r\n    USER_DETAILS_RESET,\r\n\r\n    USER_UPDATE_PROFILE_REQUEST,\r\n    USER_UPDATE_PROFILE_SUCCESS,\r\n    USER_UPDATE_PROFILE_FAIL,\r\n\r\n    USER_LIST_REQUEST,\r\n    USER_LIST_SUCCESS,\r\n    USER_LIST_FAIL,\r\n    USER_LIST_RESET,\r\n\r\n    USER_DELETE_REQUEST,\r\n    USER_DELETE_SUCCESS,\r\n    USER_DELETE_FAIL,\r\n\r\n    USER_UPDATE_REQUEST,\r\n    USER_UPDATE_SUCCESS,\r\n    USER_UPDATE_FAIL,\r\n } from '../constants/userConstants'\r\n\r\n import { ORDER_LIST_MY_RESET } from '../constants/orderConstants'\r\n\r\n\r\nexport const login = (email, password) => async (dispatch) => {\r\n    try{\r\n        dispatch({\r\n            type: USER_LOGIN_REQUEST,\r\n        })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n            }\r\n        }\r\n\r\n        const {data} = await axios.post(\r\n            '/api/users/login/',\r\n            {\r\n                'username': email,\r\n                'password': password,\r\n            },\r\n            config\r\n            )\r\n\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n    }catch(error){\r\n        dispatch({\r\n            type: USER_LOGIN_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const logout = () => (dispatch) => {\r\n    localStorage.removeItem('userInfo')\r\n    dispatch({type: USER_LOGOUT})\r\n    dispatch({type: USER_DETAILS_RESET})\r\n    dispatch({type: USER_LIST_RESET})\r\n    dispatch({type: ORDER_LIST_MY_RESET})\r\n}\r\n\r\n\r\nexport const register = (name, email, password) => async (dispatch) => {\r\n    try{\r\n        dispatch({\r\n            type: USER_REGISTER_REQUEST,\r\n        })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n            }\r\n        }\r\n\r\n        const {data} = await axios.post(\r\n            '/api/users/register/',\r\n            {\r\n                'name': name,\r\n                'email': email,\r\n                'password': password,\r\n            },\r\n            config\r\n            )\r\n\r\n        dispatch({\r\n            type: USER_REGISTER_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n        // auto login user after register\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n    }catch(error){\r\n        dispatch({\r\n            type: USER_REGISTER_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const getUserDetails = (id) => async (dispatch, getState) => {\r\n    try{\r\n        dispatch({\r\n            type: USER_DETAILS_REQUEST,\r\n        })\r\n\r\n        const {\r\n            userLogin: {userInfo}\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const {data} = await axios.get(\r\n            `/api/users/${id}/`,\r\n            config\r\n            )\r\n\r\n        dispatch({\r\n            type: USER_DETAILS_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n    }catch(error){\r\n        dispatch({\r\n            type: USER_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\r\n    try{\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_REQUEST,\r\n        })\r\n\r\n        const {\r\n            userLogin: {userInfo}\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const {data} = await axios.put(\r\n            '/api/users/profile/update/',\r\n            user,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n        // auto login user after update\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n    }catch(error){\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const listUsers = () => async (dispatch, getState) => {\r\n    try{\r\n        dispatch({\r\n            type: USER_LIST_REQUEST,\r\n        })\r\n\r\n        const {\r\n            userLogin: {userInfo}\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const {data} = await axios.get(\r\n            '/api/users/',\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_LIST_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n    }catch(error){\r\n        dispatch({\r\n            type: USER_LIST_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const deleteUser = (id) => async (dispatch, getState) => {\r\n    try{\r\n        dispatch({\r\n            type: USER_DELETE_REQUEST,\r\n        })\r\n\r\n        const {\r\n            userLogin: {userInfo}\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const {data} = await axios.delete(\r\n            `/api/users/delete/${id}/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_DELETE_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n    }catch(error){\r\n        dispatch({\r\n            type: USER_DELETE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const updateUser = (user) => async (dispatch, getState) => {\r\n    try{\r\n        dispatch({\r\n            type: USER_UPDATE_REQUEST,\r\n        })\r\n\r\n        const {\r\n            userLogin: {userInfo}\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const {data} = await axios.put(\r\n            `/api/users/update/${user._id}/`,\r\n            user,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_UPDATE_SUCCESS,\r\n        })\r\n\r\n        dispatch({\r\n            type: USER_DETAILS_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n    }catch(error){\r\n        dispatch({\r\n            type: USER_UPDATE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n","import React from 'react'\r\nimport { Container, Navbar, Nav, Row, NavDropdown } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport SearchBox from './SearchBox'\r\nimport { logout } from '../actions/userActions'\r\n\r\nfunction Header() {\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const logoutHandler = () => {\r\n      dispatch(logout())\r\n    }\r\n\r\n    return (\r\n      <header>\r\n        <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\" collapseOnSelect>\r\n          <Container>\r\n            <LinkContainer to=\"/\">\r\n              <Navbar.Brand>Secret Shop</Navbar.Brand>\r\n            </LinkContainer>\r\n            \r\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n            <Navbar.Collapse id=\"basic-navbar-nav\">\r\n              <SearchBox />\r\n              <Nav className=\"ml-auto\">\r\n\r\n                <LinkContainer to=\"/cart\">\r\n                  <Nav.Link><i className=\"fas fa-shopping-cart\"></i> Cart</Nav.Link>\r\n                </LinkContainer>\r\n\r\n                {userInfo ? (\r\n                  <NavDropdown title={userInfo.name} id='username'>\r\n                    <LinkContainer to=\"/profile\">\r\n                      <NavDropdown.Item>Profile</NavDropdown.Item>\r\n                    </LinkContainer>\r\n\r\n                    <NavDropdown.Item onClick={logoutHandler}>Logout</NavDropdown.Item>\r\n                  </NavDropdown>\r\n                ): (\r\n                  <LinkContainer to=\"/login\">\r\n                    <Nav.Link><i className=\"fas fa-user\"></i> Login</Nav.Link>\r\n                  </LinkContainer>\r\n                )}\r\n\r\n                {userInfo && userInfo.isAdmin && (\r\n                  <NavDropdown title='Admin' id='adminmenu'>\r\n                    <LinkContainer to=\"/admin/userlist\">\r\n                      <NavDropdown.Item>Users</NavDropdown.Item>\r\n                    </LinkContainer>\r\n\r\n                    <LinkContainer to=\"/admin/productlist\">\r\n                      <NavDropdown.Item>Products</NavDropdown.Item>\r\n                    </LinkContainer>\r\n\r\n                    <LinkContainer to=\"/admin/orderlist\">\r\n                      <NavDropdown.Item>Orders</NavDropdown.Item>\r\n                    </LinkContainer>\r\n                  </NavDropdown>\r\n                )}\r\n\r\n              </Nav>\r\n            </Navbar.Collapse>\r\n          </Container>\r\n        </Navbar>\r\n      </header>\r\n    );\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\n\r\nfunction Footer() {\r\n    return (\r\n        <footer>\r\n            <Container>\r\n                <Row>\r\n                    <Col className=\"text-center py-3\">Copyfarright &copy; SecretShop</Col>\r\n                </Row>\r\n            </Container>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","import React from 'react'\r\n\r\nfunction Rating({value, text, color}) {\r\n    return (\r\n        <div className=\"rating\">\r\n            <span>\r\n                <i style={{ color }} className={\r\n                    value >= 1\r\n                        ? \"fas fa-star\"\r\n                        : value >= 0.5\r\n                            ? \"fas fa-star-half-alt\"\r\n                            : \"far fa-star\"\r\n                }>\r\n                </i>\r\n            </span>\r\n            <span>\r\n                <i style={{ color }} className={\r\n                    value >= 2\r\n                        ? \"fas fa-star\"\r\n                        : value >= 1.5\r\n                            ? \"fas fa-star-half-alt\"\r\n                            : \"far fa-star\"\r\n                }>\r\n                </i>\r\n            </span>\r\n            <span>\r\n                <i style={{ color }} className={\r\n                    value >= 3\r\n                        ? \"fas fa-star\"\r\n                        : value >= 2.5\r\n                            ? \"fas fa-star-half-alt\"\r\n                            : \"far fa-star\"\r\n                }>\r\n                </i>\r\n            </span>\r\n            <span>\r\n                <i style={{ color }} className={\r\n                    value >= 4\r\n                        ? \"fas fa-star\"\r\n                        : value >= 3.5\r\n                            ? \"fas fa-star-half-alt\"\r\n                            : \"far fa-star\"\r\n                }>\r\n                </i>\r\n            </span>\r\n            <span>\r\n                <i style={{ color }} className={\r\n                    value >= 5\r\n                        ? \"fas fa-star\"\r\n                        : value >= 4.5\r\n                            ? \"fas fa-star-half-alt\"\r\n                            : \"far fa-star\"\r\n                }>\r\n                </i>\r\n            </span>\r\n            <span>{text && text}</span> {/* if text exists it will be displayed */}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Rating\r\n","import React from 'react'\r\nimport { Card } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport Rating from './Rating'\r\n\r\nfunction Product({ product }) {\r\n    return (\r\n      <Card className=\"my-3 p-3 rounded\">\r\n        <Link to={`/product/${product._id}`}>\r\n          <Card.Img src={product.image} />\r\n        </Link>\r\n\r\n        <Card.Body>\r\n          <Link to={`/product/${product._id}`}>\r\n            <Card.Title as=\"div\">\r\n              <strong>{product.name}</strong>\r\n            </Card.Title>\r\n          </Link>\r\n          <Card.Text as=\"div\">\r\n              <div className=\"my-3\">\r\n                <Rating value={product.rating} text={`${product.numReviews} reviews`} color={\"#fce803\"} />\r\n              </div>\r\n          </Card.Text>\r\n          <Card.Text as=\"h3\">\r\n              ${product.price}\r\n          </Card.Text>\r\n        </Card.Body>\r\n      </Card>\r\n    );\r\n}\r\n\r\nexport default Product\r\n","import React from 'react'\r\nimport { Spinner } from 'react-bootstrap'\r\n\r\n\r\nfunction Loader() {\r\n    return (\r\n        <Spinner\r\n            animation=\"border\"\r\n            role=\"status\"\r\n            style={{\r\n                height: \"100px\",\r\n                width: \"100px\",\r\n                margin: \"auto\",\r\n                display: \"block\"\r\n            }}\r\n            >\r\n            <span className=\"sr-only\">Loading...</span>\r\n        </Spinner>\r\n    )\r\n}\r\n\r\nexport default Loader\r\n","import React from 'react'\r\nimport { Alert } from 'react-bootstrap'\r\n\r\n\r\nfunction Message({ variant, children }) {\r\n    return (\r\n        <Alert variant={variant}>\r\n            {children}\r\n        </Alert>\r\n    )\r\n}\r\n\r\nexport default Message\r\n","import React from 'react'\r\nimport { Pagination } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\n\r\n\r\nfunction Paginate({page, pages, keyword='', isAdmin=false}) {\r\n    \r\n    if(keyword){\r\n        keyword = keyword.split('?keyword=')[1].split('&')[0]\r\n    }\r\n    \r\n    console.log('KEYWORD:', keyword)\r\n\r\n    return (\r\n        pages > 1 && (\r\n            <Pagination>\r\n                {[...Array(pages).keys()].map((p) => (\r\n                    <LinkContainer\r\n                        key={p + 1}\r\n                        to={!isAdmin ?\r\n                            `/?keyword=${keyword}&page=${p + 1}`\r\n                            : `/admin/productlist/?keyword=${keyword}&page=${p + 1}`\r\n                        }\r\n                    >\r\n                        <Pagination.Item active={p + 1 === page }>\r\n                            {p + 1}\r\n                        </Pagination.Item>\r\n                    </LinkContainer>\r\n                ))}\r\n            </Pagination>\r\n        )\r\n    )\r\n}\r\n\r\nexport default Paginate\r\n","import axios from 'axios'\r\n\r\nimport { \r\n    PRODUCT_LIST_REQUEST, PRODUCT_LIST_SUCCESS, PRODUCT_LIST_FAIL,\r\n    PRODUCT_DETAILS_REQUEST, PRODUCT_DETAILS_SUCCESS, PRODUCT_DETAILS_FAIL,\r\n    PRODUCT_DELETE_REQUEST, PRODUCT_DELETE_SUCCESS, PRODUCT_DELETE_FAIL,\r\n    PRODUCT_CREATE_REQUEST, PRODUCT_CREATE_SUCCESS, PRODUCT_CREATE_FAIL,\r\n    PRODUCT_UPDATE_REQUEST, PRODUCT_UPDATE_SUCCESS, PRODUCT_UPDATE_FAIL,\r\n    PRODUCT_CREATE_REVIEW_REQUEST, PRODUCT_CREATE_REVIEW_SUCCESS, PRODUCT_CREATE_REVIEW_FAIL,\r\n    PRODUCT_TOP_REQUEST, PRODUCT_TOP_SUCCESS, PRODUCT_TOP_FAIL,\r\n} from '../constants/productConstants'\r\n\r\n\r\nexport const listProducts = (keyword='') => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: PRODUCT_LIST_REQUEST })\r\n        const { data } = await axios.get(`/api/products${keyword}`)\r\n        dispatch({ \r\n            type: PRODUCT_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n    } catch(error) {\r\n        dispatch({\r\n            type: PRODUCT_LIST_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const listTopProducts = () => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: PRODUCT_TOP_REQUEST })\r\n        const { data } = await axios.get(`/api/products/top/`)\r\n        dispatch({ \r\n            type: PRODUCT_TOP_SUCCESS,\r\n            payload: data\r\n        })\r\n    } catch(error) {\r\n        dispatch({\r\n            type: PRODUCT_TOP_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const listProductDetails = (id) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: PRODUCT_DETAILS_REQUEST })\r\n        const { data } = await axios.get(`/api/products/${id}/`)\r\n        dispatch({ \r\n            type: PRODUCT_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n    } catch(error) {\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const deleteProduct = (id) => async (dispatch, getState) => {\r\n    try{\r\n        dispatch({\r\n            type: PRODUCT_DELETE_REQUEST,\r\n        })\r\n\r\n        const {\r\n            userLogin: {userInfo}\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const {data} = await axios.delete(\r\n            `/api/products/delete/${id}/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: PRODUCT_DELETE_SUCCESS,\r\n        })\r\n\r\n    }catch(error){\r\n        dispatch({\r\n            type: PRODUCT_DELETE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const createProduct = () => async (dispatch, getState) => {\r\n    try{\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REQUEST,\r\n        })\r\n\r\n        const {\r\n            userLogin: {userInfo}\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const {data} = await axios.post(\r\n            `/api/products/create/`,\r\n            {},\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: PRODUCT_CREATE_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n    }catch(error){\r\n        dispatch({\r\n            type: PRODUCT_CREATE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const updateProduct = (product) => async (dispatch, getState) => {\r\n    try{\r\n        dispatch({\r\n            type: PRODUCT_UPDATE_REQUEST,\r\n        })\r\n\r\n        const {\r\n            userLogin: {userInfo}\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const {data} = await axios.put(\r\n            `/api/products/update/${product._id}/`,\r\n            product,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: PRODUCT_UPDATE_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n    }catch(error){\r\n        dispatch({\r\n            type: PRODUCT_UPDATE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const createProductReview = (productId, review) => async (dispatch, getState) => {\r\n    try{\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REVIEW_REQUEST,\r\n        })\r\n\r\n        const {\r\n            userLogin: {userInfo}\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const {data} = await axios.post(\r\n            `/api/products/${productId}/reviews/`,\r\n            review,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REVIEW_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n    }catch(error){\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REVIEW_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n","import React, {useEffect} from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { Carousel, Image } from 'react-bootstrap'\r\nimport Loader from './Loader'\r\nimport Message from './Message'\r\nimport { listTopProducts } from '../actions/productActions'\r\n\r\n\r\nfunction ProductCarousel() {\r\n    const dispatch = useDispatch()\r\n\r\n    const productTopRated = useSelector(state => state.productTopRated)\r\n    const {loading, error, products} = productTopRated\r\n\r\n    useEffect(() => {\r\n        dispatch(listTopProducts())\r\n    }, [dispatch])\r\n\r\n    return (\r\n        loading ? <Loader />\r\n            : error ? <Message variant=\"danger\">{error}</Message>\r\n                : (\r\n                    <Carousel pause=\"hover\" className=\"bg-dark\">\r\n                        {products.map(product => (\r\n                            <Carousel.Item key={product._id}>\r\n                                <Link to={`/product/${product._id}`}>\r\n                                    <Image src={product.image} alt={product.name} fluid />\r\n                                    <Carousel.Caption className=\"carousel.caption\">\r\n                                        <h4>{product.name} (${product.price})</h4>\r\n                                    </Carousel.Caption>\r\n                                </Link>\r\n                            </Carousel.Item>\r\n                        ))}\r\n                    </Carousel>\r\n                )\r\n    )\r\n}\r\n\r\nexport default ProductCarousel\r\n","import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport { Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Product from '../components/Product'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport Paginate from '../components/Paginate'\r\nimport ProductCarousel from '../components/ProductCarousel'\r\nimport { listProducts } from '../actions/productActions'\r\n\r\n\r\nfunction HomeScreen({history}) {\r\n    const dispatch = useDispatch()\r\n    const productList = useSelector(state => state.productList)\r\n    const {error, loading, products, page, pages} = productList\r\n\r\n    let keyword = history.location.search\r\n    useEffect(() => {\r\n        dispatch(listProducts(keyword))\r\n    }, [dispatch, keyword])\r\n\r\n    return (\r\n        <div>\r\n            {!keyword && <ProductCarousel />}\r\n            <h1>Latest Products</h1> \r\n            {loading ? <Loader />\r\n                : error ? <Message variant=\"danger\">{error}</Message>\r\n                    :\r\n                    <div>\r\n                        <Row>\r\n                            {products.map(product => (\r\n                                <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\r\n                                    <Product product={product} />\r\n                                </Col>\r\n                            ))}\r\n                        </Row>\r\n\r\n                        <Paginate page={page} pages={pages} keyword={keyword} />\r\n                    </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HomeScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Row, Col, Image, ListGroup, Button, Card, Form } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nimport Rating from '../components/Rating'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport ProductCarousel from '../components/ProductCarousel'\r\nimport { listProductDetails, createProductReview } from '../actions/productActions'\r\nimport { PRODUCT_CREATE_REVIEW_RESET } from '../constants/productConstants'\r\n\r\n\r\nfunction ProductScreen({ match, history }) {\r\n    const [quantity, setQuantity] = useState(1)\r\n    const [rating, setRating] = useState(0)\r\n    const [comment, setComment] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const productDetails = useSelector(state => state.productDetails)\r\n    const {error, loading, product} = productDetails\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const {userInfo} = userLogin\r\n\r\n    const productCreateReview = useSelector(state => state.productCreateReview)\r\n    const {error: errorProductReview, loading: loadingProductReview, success: successProductReview} = productCreateReview\r\n\r\n    useEffect(() => {\r\n        if(successProductReview){\r\n            setRating(0)\r\n            setComment('')\r\n            dispatch({type: PRODUCT_CREATE_REVIEW_RESET})\r\n        }\r\n\r\n        dispatch(listProductDetails(match.params.id))\r\n    }, [dispatch, match, successProductReview])\r\n\r\n    const addToCartHandler = () => {\r\n        history.push(`/cart/${match.params.id}?quantity=${quantity}`)\r\n    }\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(createProductReview(\r\n            match.params.id,\r\n            {\r\n                rating,\r\n                comment,\r\n            }\r\n        ))\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {loading ? <Loader />\r\n                : error ? <Message variant=\"danger\">{error}</Message>\r\n                    : (\r\n                        <div>\r\n                            <Row>\r\n                                <Col md={6}>\r\n                                    <Image src={product.image} alt={product.name} fluid />\r\n                                </Col>\r\n                                <Col md={3}>\r\n                                    <ListGroup variant=\"flush\">\r\n                                        <ListGroup.Item>\r\n                                            <h3>{product.name}</h3>\r\n                                        </ListGroup.Item>\r\n\r\n                                        <ListGroup.Item>\r\n                                            <Rating value={product.rating} text={`${product.numReviews} reviews`} color={\"#f5ed14\"} />\r\n                                        </ListGroup.Item>\r\n\r\n                                        <ListGroup.Item>\r\n                                            Price: ${product.price}\r\n                                        </ListGroup.Item>\r\n\r\n                                        <ListGroup.Item>\r\n                                            Description: {product.description}\r\n                                        </ListGroup.Item>\r\n                                    </ListGroup>\r\n                                </Col>\r\n                                <Col md={3}>\r\n                                    <Card>\r\n                                        <ListGroup variant=\"flush\">\r\n                                            <ListGroup.Item>\r\n                                                <Row>\r\n                                                    <Col>Price:</Col>\r\n                                                    <Col><strong>${product.price}</strong></Col>\r\n                                                </Row>\r\n                                            </ListGroup.Item>\r\n\r\n                                            <ListGroup.Item>\r\n                                                <Row>\r\n                                                    <Col>Status:</Col>\r\n                                                    <Col>{product.countInStock > 0 ? 'In Stock' : 'Out of Stock'}</Col>\r\n                                                </Row>\r\n                                            </ListGroup.Item>\r\n                                            {product.countInStock > 0 && (\r\n                                                <ListGroup.Item>\r\n                                                    <Row>\r\n                                                        <Col>Quantity</Col>\r\n                                                        <Col xs=\"auto\" className=\"my-1\">\r\n                                                            <Form.Control \r\n                                                                as=\"select\"\r\n                                                                value={quantity} \r\n                                                                onChange={(e) => setQuantity(e.target.value)}>\r\n                                                                {\r\n                                                                    [...Array(product.countInStock).keys()].map((x) => (\r\n                                                                        <option key={x + 1} value={x + 1}>\r\n                                                                            {x + 1}\r\n                                                                        </option>\r\n                                                                    ))\r\n                                                                }\r\n                                                            </Form.Control>\r\n                                                        </Col>\r\n                                                    </Row>\r\n                                                </ListGroup.Item>\r\n                                            )}\r\n\r\n                                            <ListGroup.Item>\r\n                                                <Button className=\"btn-block\"\r\n                                                        disabled={product.countInStock === 0}\r\n                                                        type=\"button\"\r\n                                                        onClick={addToCartHandler}>\r\n                                                    Add to Cart\r\n                                                </Button>\r\n                                            </ListGroup.Item>\r\n                                        </ListGroup>\r\n                                    </Card>\r\n                                </Col>\r\n                            </Row>\r\n\r\n                            <Link to=\"/\" className=\"btn btn-dark my-3\">Go Back</Link>\r\n\r\n                            <Row>\r\n                                <Col md={6}>\r\n                                    <ListGroup variant=\"flush\">\r\n\r\n                                        <h4>Write a review</h4>\r\n\r\n                                        {loadingProductReview && <Loader />}\r\n                                        {successProductReview && <Message variant=\"success\">Review submitted</Message>}\r\n                                        {errorProductReview && <Message variant=\"danger\">{errorProductReview}</Message>}\r\n\r\n                                        <ListGroup.Item>\r\n                                            {userInfo ? (\r\n                                                <Form onSubmit={submitHandler}>\r\n                                                    <Form.Group controlId=\"rating\">\r\n                                                        <Form.Label>Rating</Form.Label>\r\n                                                        <Form.Control\r\n                                                            as=\"select\"\r\n                                                            value={rating}\r\n                                                            onChange={(e) => setRating(e.target.value)}\r\n                                                        >\r\n                                                            <option value=\"\">Select...</option>\r\n                                                            <option value=\"1\">1</option>\r\n                                                            <option value=\"2\">2</option>\r\n                                                            <option value=\"3\">3</option>\r\n                                                            <option value=\"4\">4</option>\r\n                                                            <option value=\"5\">5</option>\r\n                                                        </Form.Control>\r\n                                                    </Form.Group>\r\n\r\n                                                    <Form.Group controlId=\"comment\">\r\n                                                        <Form.Label>Comment out</Form.Label>\r\n                                                        <Form.Control\r\n                                                            as=\"textarea\"\r\n                                                            row=\"5\"\r\n                                                            value={comment}\r\n                                                            onChange={(e) => setComment(e.target.value)}\r\n                                                        >\r\n\r\n                                                        </Form.Control>\r\n                                                    </Form.Group>\r\n                                                    <Button\r\n                                                        disabled={loadingProductReview}\r\n                                                        type=\"submit\"\r\n                                                        variant=\"primary\"\r\n                                                        className=\"my-3\"\r\n                                                    >\r\n                                                        Submit\r\n                                                    </Button>\r\n                                                </Form>\r\n                                            ) : (\r\n                                                <Message variant='info'><Link to=\"/login\">Login</Link> to write a review</Message>\r\n                                            )}\r\n                                        </ListGroup.Item>\r\n\r\n                                        <h4 class=\"my-3\">Reviews</h4>\r\n                                        {product.reviews.length === 0 && <Message variant=\"info\">No Reviews</Message>}\r\n                                        \r\n                                        {product.reviews.map((review) => (\r\n                                            <ListGroup.Item key={review._id} variant=\"flush\">\r\n                                                <strong>{review.name}</strong>, {review.createdAt.substring(0, 10)}\r\n                                                <Rating value={review.rating} color=\"#f8e825\"/>\r\n                                                <p>{review.comment}</p>\r\n                                            </ListGroup.Item>\r\n                                        ))}\r\n                                    </ListGroup>\r\n                                </Col>\r\n                            </Row>\r\n                        </div>\r\n                    )\r\n            }\r\n            \r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProductScreen\r\n","import axios from 'axios'\r\nimport { \r\n    CART_ADD_ITEM,\r\n    CART_REMOVE_ITEM,\r\n\r\n    CART_SAVE_SHIPPING_ADDRESS,\r\n    \r\n    CART_SAVE_PAYMENT_METHOD,\r\n} from '../constants/cartConstants'\r\n\r\n\r\nexport const addToCart = (id, quantity) => async (dispatch, getState) => {\r\n    const { data } = await axios.get(`/api/products/${id}`)\r\n    \r\n    dispatch({\r\n        type: CART_ADD_ITEM,\r\n        payload:{\r\n            product: data._id,\r\n            name:  data.name,\r\n            image: data.image,\r\n            price: data.price,\r\n            countInStock: data.countInStock,\r\n            quantity\r\n        }\r\n    })\r\n\r\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n}\r\n\r\n\r\nexport const removeFromCart = (id) => async (dispatch, getState) => {\r\n    dispatch({\r\n        type: CART_REMOVE_ITEM,\r\n        payload: id,\r\n    })\r\n\r\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n}\r\n\r\n\r\nexport const saveShippingAddress = (data) => async (dispatch) => {\r\n    dispatch({\r\n        type: CART_SAVE_SHIPPING_ADDRESS,\r\n        payload: data,\r\n    })\r\n\r\n    localStorage.setItem('shippingAddress', JSON.stringify(data))\r\n}\r\n\r\n\r\nexport const savePaymentMethod = (data) => async (dispatch) => {\r\n    dispatch({\r\n        type: CART_SAVE_PAYMENT_METHOD,\r\n        payload: data,\r\n    })\r\n\r\n    localStorage.setItem('paymentMethod', JSON.stringify(data))\r\n}","import React, { useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Row, Col, Button, Card, ListGroup, Image, Form } from 'react-bootstrap'\r\n\r\nimport Message from '../components/Message'\r\nimport { addToCart, removeFromCart } from '../actions/cartActions'\r\n\r\n\r\nfunction CartScreen({match, location, history}) {\r\n    const productId = match.params.id\r\n    const quantity = location.search ? Number(location.search.split('=')[1]) : 1  // splits '?quantity=2'\r\n    const dispatch = useDispatch()\r\n\r\n    const cart = useSelector(state => state.cart)\r\n    const {cartItems} = cart\r\n    console.log('cartItems:', cartItems)\r\n\r\n    useEffect(() => {\r\n        if(productId){\r\n            dispatch(addToCart(productId, quantity))\r\n        }\r\n    }, [dispatch, productId, quantity])\r\n\r\n    const removeFromCartHandler = (id) => {\r\n        dispatch(removeFromCart(id))\r\n    }\r\n\r\n    const checkoutHandler = () => {\r\n        history.push('/login?redirect=shipping')\r\n    }\r\n\r\n    // item.product == id of product\r\n    // e.target.value - current qty value\r\n    return (\r\n        <Row>\r\n            <Col md={8}>\r\n                <h1>Shopping Cart</h1>\r\n                {cartItems.length === 0 ? (\r\n                    <Message variant='info'>\r\n                        Your cart is empty <Link to='/'>Go Back</Link>\r\n                    </Message>\r\n                ) : (\r\n                    <ListGroup variant='flush'>\r\n                        {cartItems.map(item => (\r\n                            <ListGroup.Item key={item.product}>\r\n                                <Row>\r\n                                    <Col md={2}>\r\n                                        <Image src={item.image} alt={item.name} fluid rounded/>\r\n                                    </Col>\r\n                                    <Col md={3}>\r\n                                        <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                                    </Col>\r\n                                    <Col md={2}>\r\n                                        ${item.price}\r\n                                    </Col>\r\n                                    <Col md={3}>\r\n                                        <Form.Control \r\n                                            as=\"select\"\r\n                                            value={item.quantity} \r\n                                            onChange={(e) => dispatch(addToCart(item.product, Number(e.target.value)))}>\r\n                                            {\r\n                                                [...Array(item.countInStock).keys()].map((x) => (\r\n                                                    <option key={x + 1} value={x + 1}>\r\n                                                        {x + 1}\r\n                                                    </option>\r\n                                                ))\r\n                                            }\r\n                                        </Form.Control>\r\n                                    </Col>\r\n                                    <Col md={1}>\r\n                                        <Button type='button' variant='light' onClick={() => removeFromCartHandler(item.product)}>\r\n                                            <i className='fas fa-trash'></i>\r\n                                        </Button>\r\n                                    </Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                        ))}\r\n                    </ListGroup>\r\n                )}\r\n            </Col>\r\n            <Col md={4}>\r\n                <Card>\r\n                    <ListGroup variant='flush'>\r\n                        <ListGroup.Item>\r\n                            <h2>Subtotal {cartItems.reduce((acc, item) => acc + item.quantity, 0)} items</h2>\r\n                            ${cartItems.reduce((acc, item) => acc + item.price * item.quantity, 0).toFixed(2)}\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <Row>\r\n                                <Button type='button' className='btn-block' disabled={cartItems.length === 0} onClick={checkoutHandler}>\r\n                                    Proceed To Checkout\r\n                                </Button>\r\n                            </Row>\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n                </Card>\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default CartScreen\r\n","import React from 'react'\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\n\r\n\r\nfunction FormContainer({children}) {\r\n    return (\r\n        <Container>\r\n            <Row className=\"justify-content-md-center\">\r\n                <Col xs={12} md={6}>\r\n                    {children}\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default FormContainer\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Row, Col, Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport { login } from '../actions/userActions'\r\nimport FormContainer from '../components/FormContainer'\r\n\r\n\r\nfunction LoginScreen({location, history}) {\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const {error, loading, userInfo } = userLogin\r\n\r\n    // if user is logged in - redirect him from this page\r\n    useEffect(() => {\r\n        if(userInfo){\r\n            history.push(redirect)\r\n        }\r\n    }, [history, userInfo, redirect])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(login(email, password))\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <h1>Sign In</h1>\r\n\r\n            {error && <Message variant=\"danger\">{error}</Message>}\r\n            {loading && <Loader />}\r\n\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group controlId=\"email\">\r\n                    <Form.Label>Email Address</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type=\"email\"\r\n                        placeholder=\"Email\"\r\n                        value={email}   \r\n                        onChange={(e) => setEmail(e.target.value)}>\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"password\" className=\"my-2\">\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type=\"password\"\r\n                        placeholder=\"Password\"\r\n                        value={password}\r\n                        onChange={(e) => setPassword(e.target.value)}>\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Button type=\"submit\" variant=\"primary\" className=\"my-2\">Sign In</Button>\r\n            </Form>\r\n\r\n            <Row className=\"py-3\">\r\n                <Col>\r\n                    New money spender? <Link to={redirect ? `/register?redirect=${redirect}` : '/register'}>Sign Up</Link>\r\n                </Col>\r\n            </Row>\r\n\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default LoginScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Row, Col, Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport { register } from '../actions/userActions'\r\nimport FormContainer from '../components/FormContainer'\r\n\r\nfunction RegisterScreen({location, history}) {\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n    const [message, setMessage] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n    const userRegister = useSelector(state => state.userRegister)\r\n    const { error, loading, userInfo } = userRegister\r\n\r\n    // if user is logged in - redirect him from this page\r\n    useEffect(() => {\r\n        if(userInfo){\r\n            history.push(redirect)\r\n        }\r\n    }, [history, userInfo, redirect])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        if(password != confirmPassword){\r\n            setMessage('Passwords do not match')\r\n        }else{\r\n            dispatch(register(name, email, password))\r\n        }\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <h1>Sign Up</h1>\r\n            {message && <Message variant=\"danger\">{message}</Message>}\r\n            {error && <Message variant=\"danger\">{error}</Message>}\r\n            {loading && <Loader />}\r\n\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group controlId=\"name\">\r\n                    <Form.Label>Name</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type=\"name\"\r\n                        placeholder=\"Name\"\r\n                        value={name}\r\n                        onChange={(e) => setName(e.target.value)}>\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"email\">\r\n                    <Form.Label>Email Address</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type=\"email\"\r\n                        placeholder=\"Email\"\r\n                        value={email}   \r\n                        onChange={(e) => setEmail(e.target.value)}>\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"password\" className=\"my-2\">\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type=\"password\"\r\n                        placeholder=\"Password\"\r\n                        value={password}\r\n                        onChange={(e) => setPassword(e.target.value)}>\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"confirmPassword\" className=\"my-2\">\r\n                    <Form.Label>Confirm Password</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type=\"password\"\r\n                        placeholder=\"Confirm Password\"\r\n                        value={confirmPassword}\r\n                        onChange={(e) => setConfirmPassword(e.target.value)}>\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Button type=\"submit\" variant=\"primary\" className=\"my-2\">Sign Up</Button>\r\n            </Form>\r\n\r\n            <Row className=\"py-3\">\r\n                <Col>\r\n                    Have an account? <Link to={redirect ? `/login?redirect=${redirect}` : '/login'}>Sign In</Link>\r\n                </Col>\r\n            </Row>\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default RegisterScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Row, Col, Form, Button, Table } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport { getUserDetails, updateUserProfile } from '../actions/userActions'\r\nimport { USER_UPDATE_PROFILE_RESET } from '../constants/userConstants'\r\nimport { listMyOrders } from '../actions/orderActions'\r\n\r\n\r\nfunction ProfileScreen({ history }) {\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n    const [message, setMessage] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userDetails = useSelector(state => state.userDetails)\r\n    const {error, loading, user } = userDetails\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const userUpdateProfile = useSelector(state => state.userUpdateProfile)\r\n    const { success } = userUpdateProfile\r\n\r\n    const orderListMy = useSelector(state => state.orderListMy)\r\n    const { loading: loadingOrders, error: errorOrders, orders } = orderListMy\r\n\r\n    // if user is logged in - redirect him from this page\r\n    useEffect(() => {\r\n        if(!userInfo){\r\n            //send back to the login if there is not user\r\n            history.push('/login')\r\n        }else{\r\n            // if user info has not been loaded we dispatch it\r\n            if(!user || !user.name || success || userInfo._id !== user._id){\r\n                dispatch({type: USER_UPDATE_PROFILE_RESET})\r\n                dispatch(getUserDetails('profile'))\r\n                dispatch(listMyOrders())\r\n            // and if it has been loaded - prefill the info\r\n            }else{\r\n                setName(user.name)\r\n                setEmail(user.email)\r\n            }\r\n        }\r\n    }, [dispatch, history, userInfo, user, success])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        if(password != confirmPassword){\r\n            setMessage('Passwords do not match')\r\n        }else{\r\n            dispatch(updateUserProfile({\r\n                'id': user._id,\r\n                'name': name,\r\n                'email': email,\r\n                'password': password\r\n            }))\r\n            setMessage('')\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Row>\r\n            <Col md={3}>\r\n                <h2>Profile</h2>\r\n                {message && <Message variant=\"danger\">{message}</Message>}\r\n                {error && <Message variant=\"danger\">{error}</Message>}\r\n                {loading && <Loader />}\r\n\r\n                <Form onSubmit={submitHandler}>\r\n                    <Form.Group controlId=\"name\">\r\n                        <Form.Label>Name</Form.Label>\r\n                        <Form.Control\r\n                            required\r\n                            type=\"name\"\r\n                            placeholder=\"Name\"\r\n                            value={name}   \r\n                            onChange={(e) => setName(e.target.value)}>\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"email\">\r\n                        <Form.Label>Email Address</Form.Label>\r\n                        <Form.Control\r\n                            required\r\n                            type=\"email\"\r\n                            placeholder=\"Email\"\r\n                            value={email}   \r\n                            onChange={(e) => setEmail(e.target.value)}>\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"password\" className=\"my-2\">\r\n                        <Form.Label>New Password</Form.Label>\r\n                        <Form.Control\r\n                            type=\"password\"\r\n                            placeholder=\"New Password\"\r\n                            value={password}\r\n                            onChange={(e) => setPassword(e.target.value)}>\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"confirmPassword\" className=\"my-2\">\r\n                        <Form.Label>Confirm New Password</Form.Label>\r\n                        <Form.Control\r\n                            type=\"password\"\r\n                            placeholder=\"Confirm New Password\"\r\n                            value={confirmPassword}\r\n                            onChange={(e) => setConfirmPassword(e.target.value)}>\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Button type=\"submit\" variant=\"primary\" className=\"my-2\">Update</Button>\r\n                </Form>\r\n            </Col>\r\n            <Col md={9}>\r\n                <h2>Orders</h2>\r\n                {loadingOrders ? (\r\n                    <Loader />\r\n                ) : errorOrders ? (\r\n                    <Message variant=\"danger\">{errorOrders}</Message>\r\n                ) : (\r\n                    <Table striped responsive className=\"table-sm\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>ID</th>\r\n                                <th>Date</th>\r\n                                <th>Total</th>\r\n                                <th>Paid</th>\r\n                                <th>Delivered</th>\r\n                                <th></th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {orders.map(order => (\r\n                                <tr key={order._id}>\r\n                                    <td>{order._id}</td>\r\n                                    <td>{order.createdAt.substring(0, 10)}</td>\r\n                                    <td>${order.totalPrice}</td>\r\n                                    <td>\r\n                                        {order.isPaid ? order.paidAt.substring(0, 10) : (\r\n                                            <i className=\"fas fa-times\" style={{ color: 'red' }}></i>\r\n                                        )}\r\n                                    </td>\r\n                                    <td>\r\n                                        {order.isDelivered ? order.deliveredAt.substring(0, 10) : (\r\n                                            <i className=\"fas fa-times\" style={{ color: 'red' }}></i>\r\n                                        )}\r\n                                    </td>\r\n                                    <td>\r\n                                        <LinkContainer to={`/order/${order._id}`}>\r\n                                            <Button className=\"btn-sm\">Details</Button>\r\n                                        </LinkContainer>\r\n                                    </td>\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    </Table>\r\n                )}\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default ProfileScreen\r\n","import axios from 'axios'\r\nimport { \r\n    ORDER_CREATE_REQUEST,\r\n    ORDER_CREATE_SUCCESS,\r\n    ORDER_CREATE_FAIL,\r\n\r\n    ORDER_DETAILS_REQUEST,\r\n    ORDER_DETAILS_SUCCESS,\r\n    ORDER_DETAILS_FAIL,\r\n\r\n    ORDER_PAY_REQUEST,\r\n    ORDER_PAY_SUCCESS,\r\n    ORDER_PAY_FAIL,\r\n    ORDER_PAY_RESET,\r\n\r\n    ORDER_LIST_MY_REQUEST,\r\n    ORDER_LIST_MY_SUCCESS,\r\n    ORDER_LIST_MY_FAIL,\r\n    ORDER_LIST_MY_RESET,\r\n\r\n    ORDER_LIST_REQUEST,\r\n    ORDER_LIST_SUCCESS,\r\n    ORDER_LIST_FAIL,\r\n\r\n    ORDER_DELIVER_REQUEST,\r\n    ORDER_DELIVER_SUCCESS,\r\n    ORDER_DELIVER_FAIL,\r\n    ORDER_DELIVER_RESET,\r\n} from '../constants/orderConstants'\r\nimport { CART_CLEAR_ITEMS } from '../constants/cartConstants'    \r\n\r\n\r\nexport const createOrder = (order) => async (dispatch, getState) => {\r\n    try{\r\n        dispatch({\r\n            type: ORDER_CREATE_REQUEST,\r\n        })\r\n\r\n        const {\r\n            userLogin: {userInfo}\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const {data} = await axios.post(\r\n            '/api/orders/add/',\r\n            order,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_CREATE_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n        dispatch({\r\n            type: CART_CLEAR_ITEMS,\r\n            payload: data,\r\n        })\r\n\r\n        localStorage.removeItem('cartItems')\r\n\r\n    }catch(error){\r\n        dispatch({\r\n            type: ORDER_CREATE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\r\n    try{\r\n        dispatch({\r\n            type: ORDER_DETAILS_REQUEST,\r\n        })\r\n\r\n        const {\r\n            userLogin: {userInfo}\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const {data} = await axios.get(\r\n            `/api/orders/${id}/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_DETAILS_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n    }catch(error){\r\n        dispatch({\r\n            type: ORDER_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const payOrder = (id, paymentResult) => async (dispatch, getState) => {\r\n    try{\r\n        dispatch({\r\n            type: ORDER_PAY_REQUEST,\r\n        })\r\n\r\n        const {\r\n            userLogin: {userInfo}\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const {data} = await axios.put(\r\n            `/api/orders/${id}/pay/`,\r\n            paymentResult,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_PAY_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n    }catch(error){\r\n        dispatch({\r\n            type: ORDER_PAY_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const deliverOrder = (order) => async (dispatch, getState) => {\r\n    try{\r\n        dispatch({\r\n            type: ORDER_DELIVER_REQUEST,\r\n        })\r\n\r\n        const {\r\n            userLogin: {userInfo}\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const {data} = await axios.put(\r\n            `/api/orders/${order._id}/deliver/`,\r\n            {},\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_DELIVER_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n    }catch(error){\r\n        dispatch({\r\n            type: ORDER_DELIVER_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const listMyOrders = () => async (dispatch, getState) => {\r\n    try{\r\n        dispatch({\r\n            type: ORDER_LIST_MY_REQUEST,\r\n        })\r\n\r\n        const {\r\n            userLogin: {userInfo}\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const {data} = await axios.get(\r\n            `/api/orders/myorders/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_LIST_MY_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n    }catch(error){\r\n        dispatch({\r\n            type: ORDER_LIST_MY_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const listOrders = () => async (dispatch, getState) => {\r\n    try{\r\n        dispatch({\r\n            type: ORDER_LIST_REQUEST,\r\n        })\r\n\r\n        const {\r\n            userLogin: {userInfo}\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const {data} = await axios.get(\r\n            `/api/orders/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_LIST_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n    }catch(error){\r\n        dispatch({\r\n            type: ORDER_LIST_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n","import React from 'react'\r\nimport { Nav } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\n\r\n\r\nfunction CheckoutSteps({step1, step2, step3, step4}) {\r\n    return (\r\n        <Nav className=\"justify-content-center mb-4\">\r\n            <Nav.Item>\r\n                {step1 ? (\r\n                    <LinkContainer to=\"/login\">\r\n                        <Nav.Link>Login</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : (\r\n                    <Nav.Link disabled>Login</Nav.Link>\r\n                )}\r\n            </Nav.Item>\r\n\r\n            <Nav.Item>\r\n                {step2 ? (\r\n                    <LinkContainer to=\"/shipping\">\r\n                        <Nav.Link>Shipping</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : (\r\n                    <Nav.Link disabled>Shipping</Nav.Link>\r\n                )}\r\n            </Nav.Item>\r\n\r\n            <Nav.Item>\r\n                {step3 ? (\r\n                    <LinkContainer to=\"/payment\">\r\n                        <Nav.Link>Payment</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : (\r\n                    <Nav.Link disabled>Payment</Nav.Link>\r\n                )}\r\n            </Nav.Item>\r\n\r\n            <Nav.Item>\r\n                {step4 ? (\r\n                    <LinkContainer to=\"/placeorder\">\r\n                        <Nav.Link>Place Order</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : (\r\n                    <Nav.Link disabled>Place Order</Nav.Link>\r\n                )}\r\n            </Nav.Item>\r\n        </Nav>\r\n    )\r\n}\r\n\r\nexport default CheckoutSteps\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Form, Button, ProgressBar } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { saveShippingAddress } from '../actions/cartActions'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\n\r\nfunction ShippingScreen({history}) {\r\n\r\n    const cart = useSelector(state => state.cart)\r\n    const {shippingAddress} = cart\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const [address, setAddress] = useState(shippingAddress.address)\r\n    const [city, setCity] = useState(shippingAddress.city)\r\n    const [postalCode, setPostalCode] = useState(shippingAddress.postalCode)\r\n    const [country, setCountry] = useState(shippingAddress.country)\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(saveShippingAddress({address, city, postalCode, country}))\r\n        history.push('/payment')\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <ProgressBar now={45} />\r\n            <CheckoutSteps step1 step2/>\r\n            <h1>Shipping</h1>\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group controlId=\"country\">\r\n                    <Form.Label>Country</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type=\"text\"\r\n                        placeholder=\"Country\"\r\n                        value={country ? country : ''}\r\n                        onChange={(e) => setCountry(e.target.value)}>\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"city\" className='my-3'>\r\n                    <Form.Label>City</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type=\"text\"\r\n                        placeholder=\"City\"\r\n                        value={city ? city : ''}\r\n                        onChange={(e) => setCity(e.target.value)}>\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"address\" className='my-3'>\r\n                    <Form.Label>Address</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type=\"text\"\r\n                        placeholder=\"Address\"\r\n                        value={address ? address : ''}\r\n                        onChange={(e) => setAddress(e.target.value)}>\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"postalCode\" className='my-3'>\r\n                    <Form.Label>PostalCode</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type=\"text\"\r\n                        placeholder=\"PostalCode\"\r\n                        value={postalCode ? postalCode : ''}\r\n                        onChange={(e) => setPostalCode(e.target.value)}>\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Button type=\"submit\" variant=\"primary\" className=\"my-2\">Continue</Button>\r\n            </Form>\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default ShippingScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Col, Form, Button, ProgressBar } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { savePaymentMethod } from '../actions/cartActions'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\n\r\nfunction PaymentScreen({history}) {\r\n    const cart = useSelector(state => state.cart)\r\n    const {shippingAddress} = cart\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const [paymentMethod, setPaymentMethod] = useState('PayPal')\r\n\r\n    if(!shippingAddress.address){\r\n        history.push('/shipping')\r\n    }\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(savePaymentMethod(paymentMethod))\r\n        history.push('/placeorder')\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <ProgressBar now={65} />\r\n            <CheckoutSteps step1 step2 step3 />\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group>\r\n                    <Form.Label as=\"legend\">Select payment method</Form.Label>\r\n                    <Col>\r\n                        <Form.Check\r\n                        type=\"radio\"\r\n                        label=\"PayPal or Credit card\"\r\n                        id=\"paypal\"\r\n                        name=\"paymentMethod\"\r\n                        checked\r\n                        onChange={(e) => setPaymentMethod(e.target.value)}>\r\n                        </Form.Check>\r\n                    </Col>\r\n                </Form.Group>\r\n\r\n                <Button type=\"submit\" variant=\"primary\" className=\"my-3\">Continue</Button>\r\n            </Form>\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default PaymentScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Row, Col, Card, Image, ListGroup, Button, ProgressBar, Form } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { createOrder } from '../actions/orderActions'\r\nimport { ORDER_CREATE_RESET } from '../constants/orderConstants'\r\nimport { CART_CLEAR_ITEMS } from '../constants/cartConstants'\r\n\r\n\r\nfunction PlaceOrderScreen({history}) {\r\n    const orderCreate = useSelector(state => state.orderCreate)\r\n    const { order, error, success } = orderCreate\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const cart = useSelector(state => state.cart)\r\n\r\n    cart.itemsPrice = cart.cartItems.reduce((acc, item) => acc + item.price * item.quantity, 0).toFixed(2)\r\n    cart.shippingPrice = (cart.itemsPrice >= 200 ? 0 : 22.8).toFixed(2)\r\n    cart.taxPrice = (0.1 * cart.itemsPrice).toFixed(2)\r\n    cart.totalPrice = (Number(cart.itemsPrice) + Number(cart.shippingPrice) + Number(cart.taxPrice)).toFixed(2)\r\n\r\n    if(!cart.paymentMethod){\r\n        history.push('/payment')\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(success){\r\n            history.push(`/order/${order._id}`)\r\n            dispatch({type: ORDER_CREATE_RESET})\r\n        }\r\n    }, [success, history])\r\n\r\n    const placeOrder = () => {\r\n        dispatch(createOrder({\r\n            orderItems: cart.cartItems,\r\n            shippingAddress: cart.shippingAddress,\r\n            paymentMethod: cart.paymentMethod,\r\n            itemsPrice: cart.itemsPrice,\r\n            shippingPrice: cart.shippingPrice,\r\n            taxPrice: cart.taxPrice,\r\n            totalPrice: cart.totalPrice,\r\n        }))\r\n    }\r\n    return (\r\n        <div>\r\n            <FormContainer>\r\n                <ProgressBar now={100} />\r\n            </FormContainer>\r\n            \r\n            <CheckoutSteps step1 step2 step3 step4 />\r\n            <Row>\r\n                <Col md={8}>\r\n                    <ListGroup variant=\"flush\">\r\n                        <ListGroup.Item>\r\n                            <h2>Shipping</h2>\r\n                            <p>\r\n                                <strong>Address: </strong>\r\n                                {cart.shippingAddress.postalCode}, {'   '}\r\n                                {cart.shippingAddress.country}, {cart.shippingAddress.city}, {cart.shippingAddress.address},\r\n                            </p>\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <h2>Payment</h2>\r\n                            <p>\r\n                                <strong>Method: </strong>\r\n                                {cart.paymentMethod}\r\n                            </p>\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <h2>Order Items</h2>\r\n                            {cart.cartItems.length === 0 ? <Message variant=\"info\">\r\n                                Your cart is empty\r\n                            </Message> : (\r\n                                <ListGroup variant=\"flush\">\r\n                                    {cart.cartItems.map((item, index) => (\r\n                                        <ListGroup.Item key={index}>\r\n                                            <Row>\r\n                                                <Col md={1}>\r\n                                                    <Image src={item.image} alt={item.name} fluid rounded />\r\n                                                </Col>\r\n                                                <Col>\r\n                                                    <Link to={`product/${item.product}`}>{item.name}</Link>\r\n                                                </Col>\r\n                                                <Col md={4}>\r\n                                                    {item.quantity} X ${item.price} = ${(item.quantity * item.price).toFixed(2)}\r\n                                                </Col>\r\n                                            </Row>\r\n                                        </ListGroup.Item>\r\n                                    ))}\r\n                                </ListGroup>\r\n                            )}\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n                </Col>\r\n                <Col md={4}>\r\n                    <Card>\r\n                        <ListGroup variant=\"flush\">\r\n                            <ListGroup.Item>\r\n                                <h2>Order Summary</h2>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Items:</Col>\r\n                                    <Col>${cart.itemsPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Shipping:</Col>\r\n                                    <Col>${cart.shippingPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Tax:</Col>\r\n                                    <Col>${cart.taxPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Total:</Col>\r\n                                    <Col>${cart.totalPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            \r\n                            <ListGroup.Item>\r\n                                {error && <Message variant=\"danger\">{error}</Message>}\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Button type=\"button\" className=\"btn-block\" disabled={cart.cartItems === 0} onClick={placeOrder}>\r\n                                        Place Order\r\n                                    </Button>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                        </ListGroup>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PlaceOrderScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Row, Col, Card, Image, ListGroup, Button, Form } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { PayPalButton } from 'react-paypal-button-v2'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { getOrderDetails, payOrder, deliverOrder } from '../actions/orderActions'\r\nimport { ORDER_PAY_RESET, ORDER_DELIVER_RESET } from '../constants/orderConstants'\r\n\r\n\r\n// PayPal Client ID ARTR965S5PBZJiomOx6on4MaDVGZFzLl0jQ9eyIx3z9f70SP00URAicDH1RRO2HeB0mjI6o_7ApinMiV\r\n\r\n\r\nfunction OrderScreen({match, history}) {\r\n    const orderId = match.params.id\r\n    const dispatch = useDispatch()\r\n\r\n    const orderDetails = useSelector(state => state.orderDetails)\r\n    const { order, error, loading } = orderDetails\r\n\r\n    const [sdkReady, setSdkReady] = useState(false)\r\n\r\n    const orderPay = useSelector(state => state.orderPay)\r\n    const { loading: loadingPay, success: successPay } = orderPay\r\n\r\n    const orderDeliver = useSelector(state => state.orderDeliver)\r\n    const { loading: loadingDeliver, success: successDeliver } = orderDeliver\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    if(!loading && !error){\r\n        order.itemsPrice = order.orderItems.reduce((acc, item) => acc + item.price * item.quantity, 0).toFixed(2)\r\n    }\r\n\r\n    const addPayPalScript = () => {\r\n        const script = document.createElement('script')\r\n        script.type = 'text/javascript'\r\n        script.src = 'https://www.paypal.com/sdk/js?client-id=ARTR965S5PBZJiomOx6on4MaDVGZFzLl0jQ9eyIx3z9f70SP00URAicDH1RRO2HeB0mjI6o_7ApinMiV'\r\n        script.async = true\r\n        script.onload = () => {\r\n            setSdkReady(true)\r\n        }\r\n        document.body.appendChild(script)\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(!userInfo){\r\n            history.push('/login')\r\n        }\r\n\r\n        if(!order || order._id !== Number(orderId) || successPay || successDeliver){\r\n            dispatch({type: ORDER_PAY_RESET})\r\n            dispatch({type: ORDER_DELIVER_RESET})\r\n\r\n            dispatch(getOrderDetails(orderId))\r\n        }else if(!order.isPaid){\r\n            if(!window.paypal){\r\n                addPayPalScript()\r\n            }else{\r\n                setSdkReady(true)\r\n            }\r\n        }\r\n    }, [dispatch, order, orderId, successPay, successDeliver])\r\n\r\n    const successPaymentHandler = (paymentResult) => {\r\n        dispatch(payOrder(orderId, paymentResult))\r\n    }\r\n\r\n    const deliverHandler = () => {\r\n        dispatch(deliverOrder(order))\r\n    }\r\n\r\n    return loading ? (\r\n        <Loader />\r\n    ) : error ? (\r\n        <Message variant=\"danger\">{error}</Message>\r\n    ) : (\r\n        <div>\r\n            <h1>Order {order._id}</h1>\r\n            <Row>\r\n                <Col md={8}>\r\n                    <ListGroup variant=\"flush\">\r\n                        <ListGroup.Item>\r\n                            <h2>Shipping</h2>\r\n                            <p><strong>Name: </strong>{order.user.name}</p>\r\n                            <p><strong>Email: </strong><a href={`mailto:${order.user.email}`}>{order.user.email}</a></p>\r\n                            <p>\r\n                                <strong>Address: </strong>\r\n                                {order.shippingAddress.postalCode}, {'   '}\r\n                                {order.shippingAddress.country}, {order.shippingAddress.city}, {order.shippingAddress.address},\r\n                            </p>\r\n                            {order.isDelivered ? (\r\n                                <Message variant=\"success\">Delivered On {order.deliveredAt.substring(0, 10)}</Message>\r\n                            ) : (\r\n                                <Message variant=\"warning\">Not Delivered</Message>\r\n                            )}\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <h2>Payment</h2>\r\n                            <p>\r\n                                <strong>Method: </strong>\r\n                                {order.paymentMethod}\r\n                            </p>\r\n                            {order.isPaid ? (\r\n                                <Message variant=\"success\">Paid On {order.paidAt.substring(0, 10)}</Message>\r\n                            ) : (\r\n                                <Message variant=\"warning\">Not Paid</Message>\r\n                            )}\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <h2>Order Items</h2>\r\n                            {order.orderItems.length === 0 ? <Message variant=\"info\">\r\n                                Order is empty\r\n                            </Message> : (\r\n                                <ListGroup variant=\"flush\">\r\n                                    {order.orderItems.map((item, index) => (\r\n                                        <ListGroup.Item key={index}>\r\n                                            <Row>\r\n                                                <Col md={1}>\r\n                                                    <Image src={item.image} alt={item.name} fluid rounded />\r\n                                                </Col>\r\n                                                <Col>\r\n                                                    <Link to={`product/${item.product}`}>{item.name}</Link>\r\n                                                </Col>\r\n                                                <Col md={4}>\r\n                                                    {item.quantity} X ${item.price} = ${(item.quantity * item.price).toFixed(2)}\r\n                                                </Col>\r\n                                            </Row>\r\n                                        </ListGroup.Item>\r\n                                    ))}\r\n                                </ListGroup>\r\n                            )}\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n                </Col>\r\n                <Col md={4}>\r\n                    <Card>\r\n                        <ListGroup variant=\"flush\">\r\n                            <ListGroup.Item>\r\n                                <h2>Order Summary</h2>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Items:</Col>\r\n                                    <Col>${order.itemsPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Shipping:</Col>\r\n                                    <Col>${order.shippingPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Tax:</Col>\r\n                                    <Col>${order.taxPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Total:</Col>\r\n                                    <Col>${order.totalPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            {!order.isPaid && (\r\n                                <ListGroup.Item>\r\n                                    {loadingPay && (<Loader />)}\r\n                                    {!sdkReady ? (\r\n                                        <Loader />\r\n                                    ) : (\r\n                                        <PayPalButton \r\n                                            amount={order.totalPrice}\r\n                                            onSuccess={successPaymentHandler}\r\n                                        />\r\n                                    )}\r\n                                </ListGroup.Item>\r\n                            )}\r\n\r\n                        </ListGroup>\r\n                            {loadingDeliver && <Loader />}\r\n                            {userInfo && userInfo.isAdmin && order.isPaid && !order.isDelivered && (\r\n                                <ListGroup.Item>\r\n                                    <Row>\r\n                                        <Button\r\n                                            type=\"button\"\r\n                                            className=\"btn-block\"\r\n                                            onClick={deliverHandler}\r\n                                        >\r\n                                            Mark as delivered\r\n                                        </Button>\r\n                                    </Row>\r\n                                </ListGroup.Item>\r\n                            )}\r\n\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default OrderScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Table, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport { register } from '../actions/userActions'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { listOrders } from '../actions/orderActions'\r\n\r\n\r\nfunction OrderListScreen({history}) {\r\n    const dispatch = useDispatch()\r\n\r\n    const orderList = useSelector(state => state.orderList)\r\n    const {loading, error, orders} = orderList\r\n    \r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const {userInfo} = userLogin\r\n\r\n    useEffect(() => {\r\n        if(userInfo && userInfo.isAdmin) {\r\n            dispatch(listOrders())\r\n        }else{\r\n            history.push('/login')\r\n        }\r\n    }, [dispatch, history, userInfo])\r\n\r\n    return (\r\n        <div>\r\n            <h1>Orders</h1>\r\n            {loading ? (<Loader />)\r\n                : error ? (<Message variant=\"danger\">{error}</Message>)\r\n                    : (\r\n                        <Table striped bordered hover responsive className=\"table-sm\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>ID</th>\r\n                                    <th>USER</th>\r\n                                    <th>DATE</th>\r\n                                    <th>TOTAL PRICE</th>\r\n                                    <th>PAID</th>\r\n                                    <th>DELIVERED</th>\r\n                                    <th></th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {orders.map(order => (\r\n                                    <tr key={order._id}>\r\n                                        <td>{order._id}</td>\r\n                                        <td>{order.user && order.user.name}</td>\r\n                                        <td>{order.createdAt.substring(0, 10)}</td>\r\n                                        <td>${order.totalPrice}</td>\r\n                                        <td>{order.isPaid ? (\r\n                                            order.paidAt.substring(0, 10)\r\n                                        ) : (\r\n                                            <i className=\"fas fa-times\" style={{ color: 'red' }}></i>\r\n                                        )}\r\n                                        </td>\r\n                                        <td>{order.isDelivered ? (\r\n                                            order.deliveredAt.substring(0, 10)\r\n                                        ) : (\r\n                                            <i className=\"fas fa-times\" style={{ color: 'red' }}></i>\r\n                                        )}\r\n                                        </td>\r\n\r\n                                        <td>\r\n                                            <LinkContainer to={`/order/${order._id}/`}>\r\n                                                <Button  variant=\"dark\" className=\"btn-sm\">\r\n                                                    Details\r\n                                                </Button>\r\n                                            </LinkContainer>\r\n                                        </td>\r\n                                    </tr>\r\n                                ))}\r\n                            </tbody>\r\n                        </Table>\r\n                    )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default OrderListScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Table, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport { register } from '../actions/userActions'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { listUsers, deleteUser } from '../actions/userActions'\r\n\r\n\r\nfunction UserListScreen({history}) {\r\n    const dispatch = useDispatch()\r\n\r\n    const userList = useSelector(state => state.userList)\r\n    const {loading, error, users} = userList\r\n    \r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const {userInfo} = userLogin\r\n\r\n    const userDelete = useSelector(state => state.userDelete)\r\n    const {success: successDelete} = userDelete\r\n\r\n    useEffect(() => {\r\n        if(userInfo && userInfo.isAdmin) {\r\n            dispatch(listUsers())\r\n        }else{\r\n            history.push('/login')\r\n        }\r\n    }, [dispatch, history, successDelete, userInfo])\r\n\r\n    const deleteHandler = (id, name) => {\r\n        if(window.confirm(`Are you sure you want to delete ${name}?`)){\r\n            dispatch(deleteUser(id))\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>Users</h1>\r\n            {loading ? (<Loader />)\r\n                : error ? (<Message variant=\"danger\">{error}</Message>)\r\n                    : (\r\n                        <Table striped bordered hover responsive className=\"table-sm\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>ID</th>\r\n                                    <th>NAME</th>\r\n                                    <th>EMAIL</th>\r\n                                    <th>ADMIN</th>\r\n                                    <th></th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {users.map(user => (\r\n                                    <tr key={user._id}>\r\n                                        <td>{user._id}</td>\r\n                                        <td>{user.name}</td>\r\n                                        <td>{user.email}</td>\r\n                                        <td>{user.isAdmin ? (\r\n                                            <i className=\"fas fa-check\" style={{ color: 'green' }}></i>\r\n                                        ) : (\r\n                                            <i className=\"fas fa-times\" style={{ color: 'red' }}></i>\r\n                                        )}</td>\r\n                                        <td>\r\n                                            <LinkContainer to={`/admin/user/${user._id}/edit`}>\r\n                                                <Button  variant=\"dark\" className=\"btn-sm\">\r\n                                                    <i className=\"fas fa-edit\"></i>\r\n                                                </Button>\r\n                                            </LinkContainer>\r\n                                            <Button  variant=\"danger\" className=\"btn-sm\" onClick={() => deleteHandler(user._id, user.name)}>\r\n                                                <i className=\"fas fa-trash\"></i>\r\n                                            </Button>\r\n                                        </td>\r\n                                    </tr>\r\n                                ))}\r\n                            </tbody>\r\n                        </Table>\r\n                    )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserListScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport { getUserDetails, updateUser } from '../actions/userActions'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { USER_UPDATE_RESET } from '../constants/userConstants'\r\n\r\n\r\nfunction UserEditScreen({match, history}) {\r\n    const userId = match.params.id\r\n\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [isAdmin, setIsAdmin] = useState(false)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userDetails = useSelector(state => state.userDetails)\r\n    const { error, loading, user } = userDetails\r\n\r\n    const userUpdate = useSelector(state => state.userUpdate)\r\n    const { error: errorUpdate, loading: loadingUpdate, success: successUpdate } = userUpdate\r\n\r\n    useEffect(() => {\r\n        if(successUpdate){\r\n            dispatch({type: USER_UPDATE_RESET})\r\n            history.push('/admin/userlist')\r\n        }else{\r\n            if(!user.name || user._id !== Number(userId)) {\r\n                dispatch(getUserDetails(userId))\r\n            }else{\r\n                setName(user.name)\r\n                setEmail(user.email)\r\n                setIsAdmin(user.isAdmin)\r\n            }\r\n        }\r\n    }, [user, userId, successUpdate, history])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(updateUser({\r\n            _id: user._id,\r\n            name,\r\n            email,\r\n            isAdmin\r\n        }))\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Link to=\"/admin/userlist\">Back</Link>\r\n            <FormContainer>\r\n                <h1>Edit User</h1>\r\n                {loadingUpdate && <Loader />}\r\n                {errorUpdate && <Message variant=\"danger\">{errorUpdate}</Message>}\r\n\r\n                {loading ? <Loader /> : error ? <Message variant=\"danger\">{error}</Message> : (\r\n                    <Form onSubmit={submitHandler}>\r\n                        <Form.Group controlId=\"name\">\r\n                            <Form.Label>Name</Form.Label>\r\n                            <Form.Control\r\n                                type=\"name\"\r\n                                placeholder=\"Name\"\r\n                                value={name}\r\n                                onChange={(e) => setName(e.target.value)}>\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId=\"email\">\r\n                            <Form.Label>Email Address</Form.Label>\r\n                            <Form.Control\r\n                                type=\"email\"\r\n                                placeholder=\"Email\"\r\n                                value={email}   \r\n                                onChange={(e) => setEmail(e.target.value)}>\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId=\"isadmin\" className=\"my-2\">\r\n                            <Form.Check\r\n                                type=\"checkbox\"\r\n                                label=\"Is Admin\"\r\n                                checked={isAdmin}\r\n                                onChange={(e) => setIsAdmin(e.target.checked)}>\r\n                            </Form.Check>\r\n                        </Form.Group>\r\n\r\n                        <Button type=\"submit\" variant=\"primary\" className=\"my-2\">Update</Button>\r\n                    </Form>\r\n                )}\r\n            </FormContainer>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserEditScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Table, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport Paginate from '../components/Paginate'\r\nimport { register } from '../actions/userActions'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { listProducts, deleteProduct, createProduct } from '../actions/productActions'\r\nimport { PRODUCT_CREATE_RESET } from '../constants/productConstants'\r\n\r\n\r\nfunction ProductListScreen({history, match}) {\r\n    const dispatch = useDispatch()\r\n\r\n    const productList = useSelector(state => state.productList)\r\n    const {loading, error, products, page, pages} = productList\r\n\r\n    const productDelete = useSelector(state => state.productDelete)\r\n    const {loading: loadingDelete, error: errorDelete, success: successDelete} = productDelete\r\n\r\n    const productCreate = useSelector(state => state.productCreate)\r\n    const {loading: loadingCreate, error: errorCreate, success: successCreate, product: createdProduct} = productCreate\r\n    \r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const {userInfo} = userLogin\r\n\r\n    let keyword = history.location.search\r\n    useEffect(() => {\r\n        dispatch({type: PRODUCT_CREATE_RESET})\r\n\r\n        if(userInfo){\r\n            if(!userInfo.isAdmin) {\r\n                history.push('/login')\r\n            }\r\n        }\r\n        \r\n        // When product is created with sample data - redirect user to update page\r\n        if(successCreate){\r\n            history.push(`/admin/product/${createdProduct._id}/edit`)\r\n        }else{\r\n            dispatch(listProducts(keyword))\r\n        }\r\n\r\n    }, [dispatch, history, userInfo, successDelete, successCreate, createdProduct, keyword]) // if successDelete - trigger useEffect to reload product list\r\n\r\n    const deleteHandler = (id, name) => {\r\n        let shortName = ''\r\n        if(name.length >= 25) {\r\n            shortName = name.substring(0, 25) + '...'\r\n        }else{\r\n            shortName = name\r\n        }\r\n        \r\n        if(window.confirm(`Are you sure you want to delete ${shortName}`)){\r\n            dispatch(deleteProduct(id))\r\n        }\r\n    }\r\n\r\n    const createProductHandler = () => {\r\n        dispatch(createProduct())\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Row className=\"align-items-center\">\r\n                <Col>\r\n                    <h2>Products</h2>\r\n                </Col>\r\n                <Col style={{textAlign: \"right\"}}>\r\n                    <Button className=\"my-3\" onClick={createProductHandler}>\r\n                        <i className=\"fas fa-plus\"></i> Create new\r\n                    </Button>\r\n                </Col>\r\n            </Row>\r\n\r\n            {loadingDelete && <Loader />}\r\n            {errorDelete && <Message variant=\"danger\">{errorDelete}</Message>}\r\n\r\n            {loadingCreate && <Loader />}\r\n            {errorCreate && <Message variant=\"danger\">{errorCreate}</Message>}\r\n\r\n            {loading ? (<Loader />)\r\n                : error ? (<Message variant=\"danger\">{error}</Message>)\r\n                    : (\r\n                        <div>\r\n                            <Table striped bordered hover responsive className=\"table-sm\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>ID</th>\r\n                                        <th>NAME</th>\r\n                                        <th>PRICE</th>\r\n                                        <th>CATEGORY</th>\r\n                                        <th>BRAND</th>\r\n                                        <th></th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {products.map(product => (\r\n                                        <tr key={product._id}>\r\n                                            <td>{product._id}</td>\r\n                                            <td>{product.name}</td>\r\n                                            <td>${product.price}</td>\r\n                                            <td>{product.category}</td>\r\n                                            <td>{product.brand}</td>\r\n                                            <td>\r\n                                                <LinkContainer to={`/admin/product/${product._id}/edit`}>\r\n                                                    <Button  variant=\"dark\" className=\"btn-sm\">\r\n                                                        <i className=\"fas fa-edit\"></i>\r\n                                                    </Button>\r\n                                                </LinkContainer>\r\n                                                <Button  variant=\"danger\" className=\"btn-sm\" onClick={() => deleteHandler(product._id, product.name)}>\r\n                                                    <i className=\"fas fa-trash\"></i>\r\n                                                </Button>\r\n                                            </td>\r\n                                        </tr>\r\n                                    ))}\r\n                                </tbody>\r\n                            </Table>\r\n\r\n                            <Paginate page={page} pages={pages} isAdmin={true} />\r\n                        </div>\r\n                    )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProductListScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { listProductDetails, updateProduct } from '../actions/productActions'\r\nimport { PRODUCT_UPDATE_RESET } from '../constants/productConstants'\r\n\r\n\r\nfunction ProductEditScreen({match, history}) {\r\n    const productId = match.params.id\r\n\r\n    const [name, setName] = useState('')\r\n    const [price, setPrice] = useState(0)\r\n    const [image, setImage] = useState('')\r\n    const [brand, setBrand] = useState('')\r\n    const [category, setCategory] = useState('')\r\n    const [countInStock, setCountInStock] = useState(0)\r\n    const [description, setDescription] = useState('')\r\n    const [uploading, setUploading] = useState(false)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const productDetails = useSelector(state => state.productDetails)\r\n    const { error, loading, product } = productDetails\r\n\r\n    const productUpdate = useSelector(state => state.productUpdate)\r\n    const { error: errorUpdate, loading: loadingUpdate, success: successUpdate } = productUpdate\r\n\r\n    useEffect(() => {\r\n        if(successUpdate){\r\n            dispatch({type: PRODUCT_UPDATE_RESET})\r\n            history.push('/admin/productlist')\r\n        }else{\r\n            if(!product.name || product._id !== Number(productId)) {\r\n                dispatch(listProductDetails(productId))\r\n            }else{\r\n                setName(product.name)\r\n                setPrice(product.price)\r\n                setImage(product.image)\r\n                setBrand(product.brand)\r\n                setCategory(product.category)\r\n                setCountInStock(product.countInStock)\r\n                setDescription(product.description)\r\n            }\r\n        }\r\n    }, [dispatch, product, productId, history, successUpdate])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        // Update product\r\n        dispatch(updateProduct({\r\n            _id: productId,\r\n            name,\r\n            price,\r\n            image, \r\n            brand,\r\n            countInStock,\r\n            category,\r\n            description,\r\n        }))\r\n    }\r\n\r\n    const uploadFileHandler = async (e) => {\r\n        const file = e.target.files[0]\r\n        const formData = new FormData()\r\n        formData.append('image', file)\r\n        formData.append('product_id', productId)\r\n        setUploading(true)\r\n\r\n        try{\r\n            const config = {\r\n                headers: {\r\n                    'Content-Type': 'multipart/form-data'\r\n                }\r\n            }\r\n            const {data} = await axios.post(\r\n                '/api/products/upload/',\r\n                formData,\r\n                config\r\n            )\r\n            setImage(data)\r\n            setUploading(false)\r\n        }catch(error){\r\n            setUploading(false)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Link to=\"/admin/productlist\">Back</Link>\r\n            <FormContainer>\r\n                <h1>Edit Product</h1>\r\n                \r\n                {loadingUpdate && <Loader />}\r\n                {errorUpdate && <Message variant=\"danger\">{errorUpdate}</Message>}\r\n\r\n                {loading ? <Loader /> : error ? <Message variant=\"danger\">{error}</Message> : (\r\n                    <Form onSubmit={submitHandler}>\r\n                        <Form.Group controlId=\"name\">\r\n                            <Form.Label>Name</Form.Label>\r\n                            <Form.Control\r\n                                type=\"name\"\r\n                                placeholder=\"Name\"\r\n                                value={name}\r\n                                onChange={(e) => setName(e.target.value)}>\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId=\"price\">\r\n                            <Form.Label>Price</Form.Label>\r\n                            <Form.Control\r\n                                type=\"number\"\r\n                                placeholder=\"Price\"\r\n                                value={price}\r\n                                onChange={(e) => setPrice(e.target.value)}>\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId=\"image\">\r\n                            <Form.Label>Image</Form.Label>\r\n                            <Form.Control\r\n                                type=\"text\"\r\n                                placeholder=\"Image\"\r\n                                value={image}\r\n                                onChange={(e) => setImage(e.target.value)}>\r\n                            </Form.Control>\r\n\r\n                            <Form.File\r\n                                id=\"image-file\"\r\n                                lable=\"Choose file\"\r\n                                custom\r\n                                onChange={uploadFileHandler}\r\n                            >\r\n                            </Form.File>\r\n\r\n                            {uploading && <Loader />}\r\n\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId=\"brand\">\r\n                            <Form.Label>Brand</Form.Label>\r\n                            <Form.Control\r\n                                type=\"text\"\r\n                                placeholder=\"Brand\"\r\n                                value={brand}\r\n                                onChange={(e) => setBrand(e.target.value)}>\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId=\"countInStock\">\r\n                            <Form.Label>Stock</Form.Label>\r\n                            <Form.Control\r\n                                type=\"number\"\r\n                                placeholder=\"In Stock\"\r\n                                value={countInStock}\r\n                                onChange={(e) => setCountInStock(e.target.value)}>\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId=\"category\">\r\n                            <Form.Label>Category</Form.Label>\r\n                            <Form.Control\r\n                                type=\"text\"\r\n                                placeholder=\"Category\"\r\n                                value={category}\r\n                                onChange={(e) => setCategory(e.target.value)}>\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId=\"description\">\r\n                            <Form.Label>Description</Form.Label>\r\n                            <Form.Control\r\n                                as=\"textarea\"\r\n                                type=\"text\"\r\n                                placeholder=\"Description\"\r\n                                value={description}\r\n                                onChange={(e) => setDescription(e.target.value)}>\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n\r\n                        <Button type=\"submit\" variant=\"primary\" className=\"my-2\">Update</Button>\r\n                    </Form>\r\n                )}\r\n            </FormContainer>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProductEditScreen\r\n","import { Container } from 'react-bootstrap'\nimport { HashRouter as Router, Route } from 'react-router-dom'\n\nimport Header from './components/Header'\nimport Footer from './components/Footer'\n\nimport HomeScreen from './screens/HomeScreen'\nimport ProductScreen from './screens/ProductScreen'\nimport CartScreen from './screens/CartScreen'\nimport LoginScreen from './screens/LoginScreen'\nimport RegisterScreen from './screens/RegisterScreen'\nimport ProfileScreen from './screens/ProfileScreen'\nimport ShippingScreen from './screens/ShippingScreen'\nimport PaymentScreen from './screens/PaymentScreen'\nimport PlaceOrderScreen from './screens/PlaceOrderScreen'\nimport OrderScreen from './screens/OrderScreen'\nimport OrderListScreen from './screens/OrderListScreen'\nimport UserListScreen from './screens/UserListScreen'\nimport UserEditScreen from './screens/UserEditScreen'\nimport ProductListScreen from './screens/ProductListScreen'\nimport ProductEditScreen from './screens/ProductEditScreen'\n\n\nfunction App() {\n  return (\n    <Router>\n      <Header />\n      <main className=\"py-3\">\n        <Container>\n          {/* because every page starts with / we need to put exact, so it knows to render HomeScreen only on this page */}\n          <Route path=\"/\" component={HomeScreen} exact />\n          <Route path=\"/product/:id\" component={ProductScreen} />\n          <Route path=\"/cart/:id?\" component={CartScreen} />\n          <Route path=\"/login\" component={LoginScreen} />\n          <Route path=\"/register\" component={RegisterScreen} />\n          <Route path=\"/profile\" component={ProfileScreen} />\n          <Route path=\"/shipping\" component={ShippingScreen} />\n          <Route path=\"/payment\" component={PaymentScreen} />\n          <Route path=\"/placeorder\" component={PlaceOrderScreen} />\n          <Route path=\"/order/:id\" component={OrderScreen} />\n          \n          <Route path=\"/admin/userlist\" component={UserListScreen} />\n          <Route path=\"/admin/user/:id/edit\" component={UserEditScreen} />\n          <Route path=\"/admin/productlist\" component={ProductListScreen} />\n          <Route path=\"/admin/product/:id/edit\" component={ProductEditScreen} />\n\n          <Route path=\"/admin/orderlist\" component={OrderListScreen} />\n        </Container>\n      </main>\n      <Footer />\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport store from './store'\nimport { productListReducer } from './reducers/productReducers'\nimport './index.css';\nimport './bootstrap.min.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}